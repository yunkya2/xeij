<!DOCTYPE html><html lang="ja"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Explanation of misc/*</title><link rel="icon" type="image/vnd.microsoft.icon" href="XEiJ.ico"><link rel="shortcut icon" type="image/vnd.microsoft.icon" href="XEiJ.ico"><link rel="stylesheet" type="text/css" href="https://stdkmd.net/stdkmd.css"><script charset="UTF-8" src="https://stdkmd.net/stdkmd.js"></script></head><body><div id="head"><span id="title"><span class="en">Explanation of misc/*</span><span class="ja">misc/* の説明</span></span><span id="back">- <a href="https://stdkmd.net/xeij/">XEiJ</a> - <a href="https://stdkmd.net/">STUDIO KAMADA</a></span><span id="langbox"></span></div><div id="body"><h3 id="toc"><span class="en">Table of contents</span><span class="ja">目次</span></h3><ol class="wide"><li><a href="#makefile">Makefile</a><ol><li><a href="#makefilehost">Makefile.host</a></li><li><a href="#makefilex68k">
Makefile.x68k
</a></li></ol></li><li><a href="#developmenttool"><span class="en">Files to be used in making XEiJ</span><span class="ja">XEiJ を作るときに使うファイル</span></a><ol><li><a href="#adotrr">
adotr*.r
</a></li><li><a href="#drawingmodepl">drawingmode.pl</a></li><li><a href="#efpgp">efp.gp</a></li><li><a href="#faviconpl">favicon.pl</a></li><li><a href="#ftobpl">ftob.pl</a></li><li><a href="#graphpm">Graph.pm</a></li><li><a href="#hermitegp">hermite.gp</a></li><li><a href="#hu260pats">hu260pat.s</a></li><li><a href="#hu260patx">hu260pat.x</a></li><li><a href="#include">include/*</a></li><li><a href="#itobpl">itob.pl</a></li><li><a href="#itocpl">itob.pl</a></li><li><a href="#keymap">keymap/*</a></li><li><a href="#omusubifontr">omusubifont.r</a></li><li><a href="#omusubifonts">omusubifont.s</a></li><li><a href="#opcodepl">opcode.pl</a></li><li><a href="#optdivpl">optdiv.pl</a></li><li><a href="#pattobytespl">pattobytes.pl</a></li><li><a href="#rom16pats">rom16pat.s</a></li><li><a href="#rom16patx">rom16pat.x</a></li><li><a href="#scsi16s">scsi16.s</a></li><li><a href="#scsi16exr">scsi16ex.r</a></li><li><a href="#scsi16inr">scsi16in.r</a></li><li><a href="#sjdumppl">sjdump.pl</a></li><li><a href="#twopipl">two_pi.pl</a></li></ol></li><li><a href="#testprogram"><span class="en">Test programs</span><span class="ja">テストプログラム</span></a><ol><li><a href="#cirs">cir.s</a></li><li><a href="#cirx">cir.x</a></li><li><a href="#crtcmmtests">crtcmmtest.s</a></li><li><a href="#crtcmmtestx">crtcmmtest.x</a></li><li><a href="#crtmodtests">crtmodtest.s</a></li><li><a href="#crtmodtestx">crtmodtest.x</a></li><li><a href="#cylindertests">cylindertest.s</a></li><li><a href="#cylindertestx">cylindertest.x</a></li><li><a href="#fefunctestbas">fefunctest.bas</a></li><li><a href="#flinebuserrors">
flinebuserror.s
</a></li><li><a href="#flinebuserrorx">
flinebuserror.x
</a></li><li><a href="#flineprivileges">
flineprivilege.s
</a></li><li><a href="#flineprivilegex">
flineprivilege.x
</a></li><li><a href="#fputests">fputest.s</a></li><li><a href="#fputestx">fputest.x</a></li><li><a href="#hypotrochoids">
hypotrochoid.s
</a></li><li><a href="#hypotrochoidx">
hypotrochoid.x
</a></li><li><a href="#instructiontests">instructiontest.s</a></li><li><a href="#instructiontestx">instructiontest.x</a></li><li><a href="#optimes">optime.s</a></li><li><a href="#optimex">optime.x</a></li><li><a href="#optitestbat">optitest.bat</a></li><li><a href="#pat4096tests">
pat4096test.s
</a></li><li><a href="#pat4096testx">
pat4096test.x
</a></li><li><a href="#prwbit2s">
prwbit2.s
</a></li><li><a href="#prwbit2x">
prwbit2.x
</a></li><li><a href="#r00bit0tests">r00bit0test.s</a></li><li><a href="#r00bit0testx">r00bit0test.x</a></li><li><a href="#smktests">
smktest.s
</a></li><li><a href="#smktestx">
smktest.x
</a></li><li><a href="#spr1016tests">
spr1016test.s
</a></li><li><a href="#spr1016testx">
spr1016test.x
</a></li><li><a href="#spr256tests">
spr256test.s
</a></li><li><a href="#spr256testx">
spr256test.x
</a></li><li><a href="#spr768x512s">
spr768x512.s
</a></li><li><a href="#spr768x512x">
spr768x512.x
</a></li><li><a href="#sprdrvs">
sprdrv.s
</a></li><li><a href="#sprdrvx">
sprdrv.x
</a></li><li><a href="#vcntests">vcntest.s</a></li><li><a href="#vcntestx">vcntest.x</a></li><li><a href="#vcntest2s">vcntest2.s</a></li><li><a href="#vcntest2x">vcntest2.x</a></li><li><a href="#zkeytests">
zkeytest.s
</a></li><li><a href="#zkeytestx">
zkeytest.x
</a></li></ol></li><li><a href="#otherprograms"><span class="en">
Other programs
</span><span class="ja">
その他のプログラム
</span></a><ol><li><a href="#_060tsys">
060tsys/*
</a></li><li><a href="#_38400bpss">
38400bps.s
</a></li><li><a href="#_38400bpsx">
38400bps.x
</a></li><li><a href="#_51200bpss">
51200bps.s
</a></li><li><a href="#_51200bpsx">
51200bps.x
</a></li><li><a href="#crtmod16s">crtmod16.s</a></li><li><a href="#crtmod16x">crtmod16.x</a></li><li><a href="#crtmrb16x">crtmrb16.x</a></li><li><a href="#db350bfd">db350.bfd</a></li><li><a href="#ishfss">isHFS.s</a></li><li><a href="#ishfsx">isHFS.x</a></li><li><a href="#isxeijs">isXEiJ.s</a></li><li><a href="#isxeijx">isXEiJ.x</a></li><li><a href="#ppcons">ppcon.s</a></li><li><a href="#ppconx">ppcon.x</a></li><li><a href="#set232cs">set232c.s</a></li><li><a href="#set232cx">set232c.x</a></li><li><a href="#stupsnds">stupsnd.s</a></li><li><a href="#stupsndx">stupsnd.x</a></li><li><a href="#vperiods">vperiod.s</a></li><li><a href="#vperiodx">vperiod.x</a></li></ol></li></ol><h2><a href="#makefile" id="makefile">1. Makefile</a></h2><p><span class="en">Execute &#34;make&#34; in both environments of the host machine and X68000 in the directory &#34;misc&#34; by using the <a href="feature.htm#hostfilesystem">host file system</a>.</span> <span class="ja"><a href="feature.htm#hostfilesystem">ホストファイルシステム</a> を使い、同じ misc ディレクトリでホストマシンと X68000 の両方で make します。</span></p><h3><a href="#makefilehost" id="makefilehost">1.1. Makefile.host</a></h3><p><span class="en">Makefile to be used on the host machine. It generates <a href="#fputests">fputest.s</a> from <a href="#efpgp">efp.gp</a>.</span> <span class="ja">ホストマシンで使う Makefile です。<a href="#efpgp">efp.gp</a> を使って <a href="#fputests">fputest.s</a> を作ります。</span></p><pre>$ <kbd>make -f Makefile.host</kbd></pre><h3><a href="#makefilex68k" id="makefilex68k">1.2. Makefile.x68k </a></h3><p><span class="en"> Makefile.x68k is used to create the following files on the X68000. </span><span class="ja"> Makefile.x68k は X68000 で以下のファイルを作るときに使います。 </span></p><ul><li><a href="#_38400bps.x">38400bps.x</a></li><li><a href="#_51200bps.x">51200bps.x</a></li><li><a href="#adotrr">adotr*.r</a></li><li><a href="#cirx">cir.x</a></li><li><a href="#crtcmmtestx">crtcmmtest.x</a></li><li><a href="#crtmod16x">crtmod16.x</a></li><li><a href="#crtmodtestx">crtmodtest.x</a></li><li><a href="#crtmrb16x">crtmrb16.x</a></li><li><a href="#flinebuserror">flinebuserror.x</a></li><li><a href="#flineprivilege">flineprivilege.x</a></li><li><a href="#fputestx">fputest.x</a></li><li><a href="#hu260patx">hu260pat.x</a></li><li><a href="#hypotrochoidx">hypotrochoid.x</a></li><li><a href="#instructiontestx">instructiontest.x</a></li><li><a href="#isHFSx">isHFS.x</a></li><li><a href="#isXEiJx">isXEiJ.x</a></li><li><a href="#omusubifontr">omusubifont.r</a></li><li><a href="#optimex">optime.x</a>,</li><li><a href="#pat4096testx">pat4096test.x</a></li><li><a href="#ppconx">ppcon.x</a>,</li><li><a href="#prwbit2x">prwbit2.x</a>,</li><li><a href="#r00bit0testx">r00bit0test.x</a>,</li><li><a href="#rom16patx">rom16pat.x</a></li><li><a href="#scsi16exr">scsi16ex.r</a></li><li><a href="#scsi16inr">scsi16in.r</a></li><li><a href="#set232cx">set232c.x</a>,</li><li><a href="#smktestx">smktest.x</a></li><li><a href="#spr256testx">spr256test.x</a></li><li><a href="#spr768x512">spr768x512.x</a></li><li><a href="#sprdrvx">sprdrv.x</a>,</li><li><a href="#stupsndx">stupsnd.x</a></li><li><a href="#vcntestx">vcntest.x</a></li><li><a href="#vcntest2x">vcntest2.x</a></li><li><a href="#vperiodx">vperiod.x</a></li><li><a href="#zkeytestx">zkeytest.x</a></li></ul><pre>B:\&gt;<kbd>make -f Makefile.x68k</kbd></pre><h2><a href="#developmenttool" id="developmenttool">2. <span class="en">Files to be used in making XEiJ</span> <span class="ja">XEiJ を作るときに使うファイル</span></a></h2><h3><a href="#adotrr" id="adotrr">2.1. adotr*.r </a></h3><p><span class="en"> Used for the &#34;Send file&#34; button under &#34;Transfer&#34; in the &#34;RS232C and terminal&#34; window. </span><span class="ja"> 「RS232C とターミナル」ウインドウの「転送」の「ファイル送信」ボタンで使います。 </span></p><h3><a href="#drawingmodepl" id="drawingmodepl">2.2. drawingmode.pl</a></h3><p><span class="en">A Perl script that generates DrawingMode.java automatically. It does everything from making Japanese comments to formatting the Java code.</span> <span class="ja">DrawingMode.java を自動生成する Perl スクリプトです。日本語の注釈を作るところから Java のコードを整形するところまで全部やっています。</span></p><h3><a href="#efpgp" id="efpgp">2.3. efp.gp</a></h3><p><span class="en">A GP script that calculates constant data for the floating point arithmetic routines and generates <a href="#fputests">fputest.s</a> automatically.</span> <span class="ja">浮動小数点演算ルーチンの定数データと <a href="#fputests">fputest.s</a> を自動生成する GP スクリプトです。</span></p><ul><li><a href="https://pari.math.u-bordeaux.fr/" target="_blank">PARI/GP Development Headquarters</a></li></ul><h3><a href="#faviconpl" id="faviconpl">2.4. favicon.pl</a></h3><p><span class="en">A Perl script that generates favicon data of the Look and Feel automatically.</span> <span class="ja">ルックアンドフィールのファビコンのデータを自動生成する Perl スクリプトです。</span></p><h3><a href="#ftobpl" id="ftobpl">2.5. ftob.pl</a></h3><p><span class="en">A Perl script that converts binary files into strings.</span> <span class="ja">バイナリファイルを文字列に変換する Perl スクリプトです。</span></p><h3><a href="#graphpm" id="graphpm">2.6. Graph.pm</a></h3><p><span class="en">A Perl subroutine that draws graphs for comments of floating point arithmetic routines.</span> <span class="ja">浮動小数点演算ルーチンの注釈の関数のグラフを描くライブラリです。</span></p><h3><a href="#hermitegp" id="hermitegp">2.7. hermite.gp</a></h3><p><span class="en">A GP script that generates code of the Hermite interpolation for ADPCM automatically.</span> <span class="ja">ADPCM のエルミート補間のコードを自動生成する GP スクリプトです。</span></p><h3><a href="#hu260pats" id="hu260pats">2.8. hu260pat.s</a></h3><p><span class="en">The source code of <a href="#hu260patx">hu260pat.x</a>.</span> <span class="ja"><a href="#hu260patx">hu260pat.x</a> のソースコードです。</span></p><h3><a href="#hu260patx" id="hu260patx">2.9. hu260pat.x</a></h3><p><span class="en">This is a patch to change Human 3.02 to ROM Human 2.60. It is not an executable program.</span> <span class="ja">Human 3.02 を ROM Human 2.60 にするパッチです。実行プログラムではありません。</span></p><h3><a href="#include" id="include">2.10. include/*</a></h3><p><span class="en">These include files are used in Makefile.x68k.</span> <span class="ja">これらのインクルードファイルは Makefile.x68k で使います。</span></p><h3><a href="#itobpl" id="itobpl">2.11. itob.pl</a></h3><p><span class="en">This is a Perl script that converts an array of byte&#39;s into a string to avoid the initialization code from becoming too large to compile.</span> <span class="ja">初期化コードが巨大化してコンパイルできなくなるのを避けるために byte の配列を文字列に変換する Perl スクリプトです。</span></p><h3><a href="#itocpl" id="itocpl">2.12. itob.pl</a></h3><p><span class="en">This is a Perl script that converts an array of char&#39;s into a string to avoid the initialization code from becoming too large to compile.</span> <span class="ja">初期化コードが巨大化してコンパイルできなくなるのを避けるために char の配列を文字列に変換する Perl スクリプトです。</span></p><h3><a href="#keymap" id="keymap">2.13. keymap/*</a></h3><p><span class="en">This is a tool that collects KeyEvent data when a key assigned to an X68000 key is pressed.</span> <span class="ja">X68000 のキーに割り当てるキーを押したときの KeyEvent のデータを収集するツールです。</span></p><h3><a href="#omusubifontr" id="omusubifontr">2.14. omusubifont.r</a></h3><p><span class="en">Omusubi font which was created to characterize screenshots of XEiJ. O, the first letter of Omusubi, is wrapped in seaweed to be distinguished from 0.</span> <span class="ja">XEiJ のスクリーンショットに特徴を付けるために作ったおむすびフォントです。Omusubi の O に海苔を巻いて 0 と見分けられるようにしました。</span></p><h3><a href="#omusubifonts" id="omusubifonts">2.15. omusubifont.s</a></h3><p><span class="en">This is the source code for the Omusubi font.</span> <span class="ja">おむすびフォントのソースコードです。</span></p><h3><a href="#opcodepl" id="opcodepl">2.16. opcode.pl</a></h3><p><span class="en">A Perl script that makes a list of instructions of M68000 family. It also outputs <code>switch ～ case</code> in the core and the disassembler.</span> <span class="ja">M68000 ファミリの命令の一覧表を作る Perl スクリプトです。コアや逆アセンブラの switch～case も出力します。</span></p><h3><a href="#optdivpl" id="optdivpl">2.17. optdiv.pl</a></h3><p><span class="en">A Perl script that displays a method to replace an integer division with a multiplication and a shift operation. It is used to make the program faster.</span> <span class="ja">整数除算を乗算とシフトに変換する方法を表示する Perl スクリプトです。高速化のために多用しています。</span></p><pre>$ <kbd>perl misc/optdiv.pl 99999999 10000</kbd>
  x/10000==x*109951163&gt;&gt;&gt;40 (0&lt;=x&lt;=494389998) [99999999*109951163==10995116190048837]</pre><p><span class="en">It means that <code>x/10000</code> and <code>x*109951163&gt;&gt;&gt;40</code> are identical in the range of 0&#8804;x&#8804;494389998. You have to write the latter expression like <code>(int)(x*109951163L&gt;&gt;&gt;40)</code> because <code>99999999*109951163</code> is not in the range of <code>int</code> in the Java language.</span> <span class="ja">これは 0&#8804;x&#8804;494389998 の範囲で整数除算の x/10000 と乗算とシフトの x*109951163&gt;&gt;&gt;40 の結果が一致するという意味です。99999999/10000 は 32 ビット整数で計算できますが 99999999*109951163&gt;&gt;&gt;40 は 64 ビット整数で計算する必要があるので Java のコードでは (int)(x*109951163L&gt;&gt;&gt;40) のような書き方になります。</span></p><h3><a href="#pattobytespl" id="pattobytespl">2.18. pattobytes.pl</a></h3><p><span class="en">Perl script to convert patch data for making ROM Human 2.60 and patch data for making IPL/BIOS 1.6 into character strings.</span> <span class="ja">ROM Human 2.60 を作るためのパッチデータと IPL/BIOS 1.6 を作るためのパッチデータを文字列に変換するための Perl スクリプトです。</span></p><h3><a href="#rom16pats" id="rom16pats">2.19. rom16pat.s</a></h3><p><span class="en">This is the source code for the patch data to make IPL/BIOS 1.6.</span> <span class="ja">IPL/BIOS 1.6 を作るためのパッチデータのソースコードです。</span></p><h3><a href="#rom16patx" id="rom16patx">2.20. rom16pat.x</a></h3><p><span class="en">This is the patch data for making IPL/BIOS 1.6.</span> <span class="ja">IPL/BIOS 1.6 を作るためのパッチデータです。</span></p><h3><a href="#scsi16s" id="scsi16s">2.21. scsi16.s</a></h3><p><span class="en">Source code for SCSIEXROM 16 and SCSIINROM 16.</span> <span class="ja">SCSIEXROM 16 と SCSIINROM 16 のソースコードです。</span></p><h3><a href="#scsi16exr" id="scsi16exr">2.22. scsi16ex.r</a></h3><p><span class="en">SCSIEXROM 16.</span> <span class="ja">SCSIEXROM 16 です。</span></p><h3><a href="#scsi16inr" id="scsi16inr">2.23. scsi16in.r</a></h3><p><span class="en">SCSIINROM 16.</span> <span class="ja">SCSIINROM 16 です。</span></p><h3><a href="#sjdumppl" id="sjdumppl">2.24. sjdump.pl</a></h3><p><span class="en">A Perl script that dumps contents of specified files. It can output data as a Java source code. It is used to insert binary data into codes.</span> <span class="ja">指定されたファイルの内容をダンプする Perl スクリプトです。Java のソースの形で出力できます。コードにバイナリデータを埋め込むときに使います。</span></p><h3><a href="#twopipl" id="twopipl">2.25. two_pi.pl</a></h3><p><span class="en">A Perl script that calculate multiple precision 2/ π automatically for using in floating point arithmetic routines. This script uses the GMP.</span> <span class="ja">浮動小数点演算ルーチンで使う 2/ π のデータを自動生成する Perl スクリプトです。GMP を使います。sin 関数は実数全体で定義されます。sin(x) を計算するとき通常は x を π /2 で割った余りを - π /4～+ π /4 の範囲で求めて多項式近似を行います。2<sup>n</sup> を π /2 で割った余りを正確に求めるにはおよそ n ビットの π の値が必要です。浮動小数点数で指数部の範囲は限られているので必要な桁数の 2/ π の値を定数として抱えておきます。使うときは n ビットの多倍長計算を行う必要はなくて 2/ π のデータの一部分だけを使います。</span></p><ul><li><a href="https://gmplib.org/" target="_blank">The GNU MP Bignum Library</a></li><li><a href="https://stdkmd.net/nrr/gmp_ja.htm">GMP の使い方</a></li></ul><h2><a href="#testprogram" id="testprogram">3. <span class="en">Test programs</span> <span class="ja">テストプログラム</span></a></h2><h3><a href="#cirs" id="cirs">3.1. cir.s</a></h3><p><span class="en">The source code of <a href="#cirx">cir.x</a>.</span> <span class="ja"><a href="#cirx">cir.x</a> のソースです。</span></p><h3><a href="#cirx" id="cirx">3.2. cir.x</a></h3><p><span class="en">A program that reads and writes the CIR of the <a href="feature.htm#motherboardcoprocessor">mother board coprocessor</a> in 060turbo mode. To check the emulator is working correctly or not, execute this program in both environment of a real machine and an emulator. There are some examples of this program as comments in the source code of the coprocessor.</span> <span class="ja">060turbo モードのとき <a href="feature.htm#motherboardcoprocessor">マザーボードコプロセッサ</a> の CIR を読み書きするプログラムです。実機とエミュレータの両方で動かしてエミュレータのコプロセッサの動作を確認します。コプロセッサの注釈に実行例があります。</span></p><h3><a href="#crtcmmtests" id="crtcmmtests">3.3. crtcmmtest.s</a></h3><p><span class="en">The source code of <a href="#crtcmmtestx">crtcmmtest.x</a>.</span> <span class="ja"><a href="#crtcmmtestx">crtcmmtest.x</a> のソースです。</span></p><h3><a href="#crtcmmtestx" id="crtcmmtestx">3.4. crtcmmtest.x</a></h3><p><span class="en">A program that tests memory modes of CRTC (R20 bit10-8). Memory mode 2 (undocumented) and memory mode 5-7 (same as 4) are also tested. The <a href="feature.htm#extendedgraphic">extended graphic screen</a> should be turned off before the test.</span> <span class="ja">CRTC のメモリモード (R20 のビット 10-8) の動作を確認するプログラムです。未公開のメモリモード 2 と、メモリモード 4 と同じ 5、6、7 もテストします。<a href="feature.htm#extendedgraphic">拡張グラフィック画面</a> が ON のときは OFF にしてリセットしてからテストしてください。</span></p><h3><a href="#crtmodtests" id="crtmodtests">3.5. crtmodtest.s</a></h3><p><span class="en">The source code of <a href="#crtmodtestx">crtmodtest.x</a>.</span> <span class="ja"><a href="#crtmodtestx">crtmodtest.x</a> のソースコードです。</span></p><h3><a href="#crtmodtestx" id="crtmodtestx">3.6. crtmodtest.x</a></h3><p><span class="smallimg"><img alt="crtmodtest.png" src="crtmodtest.png"></span></p><p><span class="smallimg"><img alt="crtmod45.png" src="crtmod45.png"></span></p><p><span class="en">This program is used to test the screen mode of IOCS _CRTMOD in IPLROM 1.6.</span> <span class="ja">IPLROM 1.6 の IOCS _CRTMOD の画面モードをテストするためのプログラムです。</span></p><pre class="tt">B:\&gt;<kbd>crtmodtest</kbd>
CRTMODTEST for IPLROM 1.6 (2024-08-25)
オプション
  -l 0-1   0=CRT,1=LCD
  -m 0-47  画面モード
  -s       CRT/LCDをSRAMに保存する
  ┌───┬───────────┬───────────────────────────┐
  │CRTMOD│実画面サイズ 色 ページ│        水平同期  垂直同期  画面サイズ      備考      │
  ├───┼───────────┼───────────────────────────┤
  │   0  │ 1024x1024     16  1  │                                                      │
  │   4  │  512x512      16  4  │  CRT  31.500kHz  55.458Hz   512x512                  │
  │   8  │  512x512     256  2  │  LCD  35.341kHz  56.546Hz   512x512                  │
  │  12  │  512x512   65536  1  │                                                      │
  ├───┼───────────┼───────────────────────────┤
  │   1  │ 1024x1024     16  1  │                                                      │
  │   5  │  512x512      16  4  │  CRT  15.980kHz  61.463Hz   512x480   インターレース │
  │   9  │  512x512     256  2  │  LCD  35.341kHz  56.546Hz   512x480                  │
  │  13  │  512x512   65536  1  │                                                      │
  ├───┼───────────┼───────────────────────────┤
  │   2  │ 1024x1024     16  1  │                                                      │
  │   6  │  512x512      16  4  │  CRT  31.500kHz  55.458Hz   256x256   ラスタ二度読み │
  │  10  │  512x512     256  2  │  LCD  34.500kHz  55.200Hz   256x256   ラスタ二度読み │
  │  14  │  512x512   65536  1  │                                                      │
  ├───┼───────────┼───────────────────────────┤
  │   3  │ 1024x1024     16  1  │                                                      │
  │   7  │  512x512      16  4  │  CRT  15.980kHz  61.463Hz   256x240                  │
  │  11  │  512x512     256  2  │  LCD  34.500kHz  55.200Hz   256x240   ラスタ二度読み │
  │  15  │  512x512   65536  1  │                                                      │
  ├───┼───────────┼───────────────────────────┤
  │  16  │ 1024x1024     16  1  │  CRT  31.500kHz  55.458Hz   768x512                  │
  │  20  │  512x512     256  2  │  LCD  35.056kHz  56.090Hz   768x512                  │
  │  24  │  512x512   65536  1  │                                                      │
  ├───┼───────────┼───────────────────────────┤
  │  17  │ 1024x1024     16  1  │  CRT  24.699kHz  53.116Hz  1024x424                  │
  │  21  │  512x512     256  2  │  LCD  35.056kHz  56.090Hz   768x600                  │
  │  25  │  512x512   65536  1  │                               変形                   │
  ├───┼───────────┼───────────────────────────┤
  │  18  │ 1024x1024     16  1  │  CRT  24.699kHz  53.116Hz  1024x848   インターレース │
  │  22  │  512x512     256  2  │  LCD  35.056kHz  56.090Hz   768x1024  インターレース │
  │  26  │  512x512   65536  1  │                               変形                   │
  ├───┼───────────┼───────────────────────────┤
  │  19  │ 1024x1024     16  1  │  CRT  31.500kHz  55.458Hz   640x480   VGAではない    │
  │  23  │  512x512     256  2  │  LCD  31.469kHz  59.940Hz   640x480   VGA            │
  │  27  │  512x512   65536  1  │                                                      │
  ├───┼───────────┼───────────────────────────┤
  │  28  │ 1024x1024     16  1  │                                                      │
  │  29  │  512x512      16  4  │  CRT  31.963kHz  56.273Hz   384x256   ラスタ二度読み │
  │  30  │  512x512     256  2  │  LCD  31.963kHz  51.141Hz   384x256   ラスタ二度読み │
  │  31  │  512x512   65536  1  │                                                      │
  ├───┼───────────┼───────────────────────────┤
  │  32  │ 1024x1024     16  1  │                                                      │
  │  33  │  512x512      16  4  │  CRT  31.500kHz  55.458Hz   512x512                  │
  │  34  │  512x512     256  2  │  LCD  35.056kHz  56.090Hz   512x512                  │
  │  35  │  512x512   65536  1  │                              正方形                  │
  ├───┼───────────┼───────────────────────────┤
  │  36  │ 1024x1024     16  1  │                                                      │
  │  37  │  512x512      16  4  │  CRT  31.963kHz  56.273Hz   256x256   ラスタ二度読み │
  │  38  │  512x512     256  2  │  LCD  31.963kHz  51.141Hz   256x256   ラスタ二度読み │
  │  39  │  512x512   65536  1  │                              正方形                  │
  ├───┼───────────┼───────────────────────────┤
  │  40  │ 1024x1024     16  1  │                                                      │
  │  41  │  512x512      16  4  │  CRT  31.500kHz  55.458Hz   512x256   ラスタ二度読み │
  │  42  │  512x512     256  2  │  LCD  35.341kHz  56.546Hz   512x256   ラスタ二度読み │
  │  43  │  512x512   65536  1  │                                                      │
  ├───┼───────────┼───────────────────────────┤
  │  44  │ 1024x1024     16  1  │                                                      │
  │  45  │  512x512      16  4  │  CRT  31.500kHz  55.458Hz   512x256   ラスタ二度読み │
  │  46  │  512x512     256  2  │  LCD  35.341kHz  56.546Hz   512x256   ラスタ二度読み │
  │  47  │  512x512   65536  1  │                       スプライトは512x512            │
  └───┴───────────┴───────────────────────────┘
B:\&gt;</pre><h3><a href="#cylindertests" id="cylindertests">3.7. cylindertest.s</a></h3><p><span class="en"> The source code of <a href="#cylindertestx">cylindertest.x</a>. </span><span class="ja"> <a href="#cylindertestx">cylindertest.x</a> のソースコードです。 </span></p><h3><a href="#cylindertestx" id="cylindertestx">3.8. cylindertest.x</a></h3><p><span class="smallimg"><img alt="cylindertest.png" src="cylindertest.png"></span></p><p><span class="en"> Test the cylindrical scrolling of the text screen. Use the cursor keys to move, the CTRL key to move fast, and the ESC key to exit. </span><span class="ja"> テキスト画面の円筒スクロールをテストします。 カーソルキーで移動、CTRL キーで高速移動、ESC キーで終了します。 </span></p><h3><a href="#fefunctestbas" id="fefunctestbas">3.9. fefunctest.bas</a></h3><p><span class="en">A sample program of the <a href="feature.htm#fefunction">FE function instruction</a>.</span> <span class="ja"><a href="feature.htm#fefunction">FE ファンクション命令</a> のサンプルプログラムです。</span></p><h3><a href="#flinebuserrors" id="flinebuserrors">3.10. flinebuserror.s </a></h3><p><span class="en"> The source code of <a href="#flinebuserrorx">flinebuserror.x</a>. </span><span class="ja"> <a href="#flinebuserrorx">flinebuserror.x</a>のソースコードです。 </span></p><h3><a href="#flinebuserrorx" id="flinebuserrorx">3.11. flinebuserror.x </a></h3><p><span class="en"> This is an experiment to call the DOS call _GETENV with the old number $FF53 on the MC68030 to generate a bus error. If a bus error occurs, a bus error is displayed, otherwise the contents of the environment variable path are displayed. Since $FF53 is cpRESTORE (a3) on the MC68030, executing $FF53 will read (a3), and depending on the contents of a3, a bus error will occur. This problem is likely why _GETENV had to be moved to a new number, $FF83. </span><span class="ja"> MC68030 で DOS コールの _GETENV を古い番号 $FF53 で呼び出してバスエラーを発生させる実験です。 バスエラーが発生したときは bus error と、さもなくば環境変数 path の内容が表示されます。MC68030 では $FF53 が cpRESTORE (a3) なので、$FF53 を実行すると (a3) がリードされ、a3 の内容によってはバスエラーが発生します。 この問題が、_GETENV を新しい番号 $FF83 に移動させなければならなかった理由であると考えられます。 </span></p><pre>C:\&gt;<kbd>flinebuserror.x</kbd>
bus error
C:\&gt;</pre><h3><a href="#flineprivileges" id="flineprivileges">3.12. flineprivilege.s </a></h3><p><span class="en"> The source code of <a href="#flineprivilegex">flineprivilege.x</a>. </span><span class="ja"> <a href="#flineprivilegex">flineprivilege.x</a>のソースコードです。 </span></p><h3><a href="#flineprivilegex" id="flineprivilegex">3.13. flineprivilege.x </a></h3><p><span class="en"> Check which of $FE00 to $FFFF raises a privilege violation exception when the MC68030 is in user mode. &#34;.&#34; indicates an F-line exception occurred, and &#34;!&#34; indicates a privilege violation exception occurred. Only if the addressing mode is correct for cpSAVE or cpRESTORE will a privilege violation exception be raised instead of an F-line exception. </span><span class="ja"> MC68030 でユーザモードのとき $FE00～$FFFF のどれで特権違反例外が発生するか調べます。 「.」は F ライン例外が発生したものを示しており、「!」は特権違反例外が発生したものを示しています。cpSAVE または cpRESTORE でアドレッシングモードが正しい場合に限り、F ライン例外ではなく特権違反例外が発生します。 </span></p><pre>C:\&gt;<kbd>flineprivilege.x</kbd>
................ ................ ................ ................
................ ................ ................ ................
................ ................ ................ ................
................ ................ ................ ................
................ !!!!!!!!........ !!!!!!!!!!!!!!!! !!!!!!!!!!......
................ !!!!!!!!!!!!!!!! ........!!!!!!!! !!!!!!!!!!!!....
................ ................ ................ ................
................ ................ ................ ................
C:\&gt;</pre><h3><a href="#fputests" id="fputests">3.14. fputest.s</a></h3><p><span class="en">The source code of <a href="#fputestx">fputest.x</a> that was automatically generated by <a href="#efpgp">efp.gp</a>.</span> <span class="ja"><a href="#efpgp">efp.gp</a> で自動生成された <a href="#fputestx">fputest.x</a> のソースです。</span></p><pre>$ <kbd>make -f Makefile.host fputest.s</kbd></pre><h3><a href="#fputestx" id="fputestx">3.15. fputest.x</a></h3><p><span class="en">A program that tests operations of floating point instructions except privilege instructions. It compares the actual results with the expected results. The expected results are not equivalent to the results of real machines.</span> <span class="ja">特権命令を除く浮動小数点命令の動作を確認するテストプログラムです。演算結果を期待された結果 (実機の結果ではない) と比較します。</span></p><h4><span class="en">Usage</span> <span class="ja">使い方</span></h4><p><span class="en">About 10MB of free area is required.</span> <span class="ja">実行するにはフリーエリアが 10MB くらい必要です。</span></p><p><span class="en">Specify an empty command line to read how to use.</span> <span class="ja">コマンドラインに何も書かないと使い方が表示されます。</span></p><pre>B:\&gt;<kbd>fputest.x</kbd>
usage: fputest.x &lt;mnemonic or option&gt; ...
  FABS FACOS FADD ... -- Run tests selected by the first few letters of a mnemonic.
  all -- Run all tests.
  destination=0..[1] -- Check the destination operand.
  easy -- It&#39;s the same as margin=1 nans=0.
  failed=0..[1] -- Output the results of failed tests.
  fpsp=[0]..1 -- Test the instructions processed by the software package.
  hard -- It&#39;s the same as margin=0 nans=1.
  logging=0..[1] -- Output the results to &#34;fputest.log&#34;.
  margin=0..[1]..11 -- The acceptable margin of error in transcendental functions.
  maximum=0..[100]..1000000 -- The maximum number of results outputted for each test.
  nans=[0]..1 -- Check the mantissa of NaNs.
  status=0..[1] -- Check the status register.
  stdout=0..[1] -- Output the results to the standard output.
  successful=[0]..1 -- Output the results of successful tests.</pre><ul><li><span class="en">FABS FACOS FADD ... -- Run tests selected by the first few letters of a mnemonic.</span> <span class="ja">FABS FACOS FADD ...― ニモニックの先頭の数文字で選択されたテストを実行します。</span></li><li><span class="en">all -- Run all tests.</span> <span class="ja">all― すべてのテストを実行します。</span></li><li><span class="en">destination=0..[1] -- Check the destination operand.</span> <span class="ja">destination=0..[1]― デスティネーションオペランドを調べます。</span></li><li><span class="en">easy -- It&#39;s the same as margin=1 nans=0.</span> <span class="ja">easy―margin=1 nans=0 と同じです。</span></li><li><span class="en">failed=0..[1] -- Output the results of failed tests.</span> <span class="ja">failed=0..[1]― 失敗したテストの結果を出力します。</span></li><li><span class="en">fpsp=[0]..1 -- Test the instructions processed by the software package.</span> <span class="ja">fpsp=[0]..1― ソフトウェアパッケージで処理される命令をテストします。</span></li><li><span class="en">hard -- It&#39;s the same as margin=0 nans=1.</span> <span class="ja">hard―margin=0 nans=1 と同じです。</span></li><li><span class="en">logging=0..[1] -- Output the results to &#34;fputest.log&#34;.</span> <span class="ja">logging=0..[1]― 結果を &#34;fputest.log&#34; に出力します。</span></li><li><span class="en">margin=0..[1]..11 -- The acceptable margin of error in transcendental functions.</span> <span class="ja">margin=0..[1]..11― 超越関数の誤差の許容範囲。</span></li><li><span class="en">maximum=0..[100]..1000000 -- The maximum number of results outputted for each test.</span> <span class="ja">maximum=0..[100]..1000000― テスト毎の出力される結果の最大数。</span></li><li><span class="en">nans=[0]..1 -- Check the mantissa of NaNs.</span> <span class="ja">nans=[0]..1―NaN の仮数部を調べます。</span></li><li><span class="en">status=0..[1] -- Check the status register.</span> <span class="ja">status=0..[1]― ステータスレジスタを調べます。</span></li><li><span class="en">stdout=0..[1] -- Output the results to the standard output.</span> <span class="ja">stdout=0..[1]― 結果を標準出力に出力します。</span></li><li><span class="en">successful=[0]..1 -- Output the results of successful tests.</span> <span class="ja">successful=[0]..1― 成功したテストの結果を出力します。</span></li></ul><p><span class="en">Specify <code>all</code> to run all tests. Results are outputted to both of the standard output and the log file fputest.log.</span> <span class="ja">すべてのテストを実行するときは <code>all</code> を指定します。結果は標準出力とログファイル fputest.log の両方に出力されます。</span></p><pre>B:\&gt;<kbd>fputest.x all</kbd>
begin: 2017-01-30T04:39:15+09:00
fpu: MC68882
option: destination easy failed fpsp=0 margin=1 maximum=100 nans=0 status successful=0
test: FABS.X FPm,FPn
score: tested=38136 failed=0(0.00%) successful=38136(100.00%)
<span class="note"><span class="en">―― Omission ――</span>
<span class="ja">―― 中略 ――</span></span>
test: FTWOTOX.X FPm,FPn
score: tested=39576 failed=0(0.00%) successful=39576(100.00%)
total: tested=3028872 failed=0(0.00%) successful=3028872(100.00%)
end: 2017-01-30T04:40:11+09:00</pre><p><span class="en">For transcendental functions, differences from the expected results are allowed up to the least significant bit (1ulp). When you do not allow any errors, specify <code>hard</code> or <code>margin=0</code>.</span> <span class="ja">超越関数は期待された結果と比較して末尾の 1 ビット (1ulp) までの誤差が許容されます。1 ビットの誤差も許さないときは <code>hard</code> または <code>margin=0</code> を指定します。</span></p><pre>B:\&gt;<kbd>fputest.x hard all</kbd>
begin: 2017-01-30T04:40:12+09:00
fpu: MC68882
option: destination failed fpsp=0 hard margin=0 maximum=100 nans status successful=0
test: FABS.X FPm,FPn
score: tested=38136 failed=0(0.00%) successful=38136(100.00%)
<span class="note"><span class="en">―― Omission ――</span>
<span class="ja">―― 中略 ――</span></span>
test: FTWOTOX.X FPm,FPn
score: tested=39576 failed=0(0.00%) successful=39576(100.00%)
total: tested=3028872 failed=368(0.02%) successful=3028504(99.98%)
end: 2017-01-30T04:41:13+09:00</pre><p><span class="en">If you want to test a certain instruction, write the first few letters of a mnemonic instead of &#39;all&#39;. For example, FSIN, FSINCOS and FSINH will be tested if you specify &#39;fsin&#39;.</span> <span class="ja">特定の命令だけテストするときは all の代わりにニモニックの先頭の数文字を書きます。例えば fsin を指定すると FSIN、FSINCOS、FSINH がテストされます。</span></p><pre>B:\&gt;<kbd>fputest.x fsin</kbd>
begin: 2017-01-30T04:41:15+09:00
fpu: MC68882
option: destination easy failed fpsp=0 margin=1 maximum=100 nans=0 status successful=0
test: FSIN.X FPm,FPn
score: tested=46872 failed=0(0.00%) successful=46872(100.00%)
test: FSINCOS.X FPm,FPc:FPs
score: tested=46872 failed=0(0.00%) successful=46872(100.00%)
test: FSINH.X FPm,FPn
score: tested=39576 failed=0(0.00%) successful=39576(100.00%)
total: tested=133320 failed=0(0.00%) successful=133320(100.00%)
end: 2017-01-30T04:41:22+09:00</pre><p><span class="en">Write until the dot of the operation size to test FSIN only.</span> <span class="ja">FSIN だけテストしたいときはオペレーションサイズのドットまで書きます。</span></p><pre>B:\&gt;<kbd>fputest.x fsin.</kbd>
begin: 2017-01-30T04:41:24+09:00
fpu: MC68882
option: destination easy failed fpsp=0 margin=1 maximum=100 nans=0 status successful=0
test: FSIN.X FPm,FPn
score: tested=46872 failed=0(0.00%) successful=46872(100.00%)
total: tested=46872 failed=0(0.00%) successful=46872(100.00%)
end: 2017-01-30T04:41:30+09:00</pre><h4><span class="en">Legends</span> <span class="ja">凡例</span></h4><ul><li><span class="en">expected…expected results</span> <span class="ja">expected… 期待された結果</span></li><li><span class="en">actual…actual results</span> <span class="ja">actual… 実際の結果</span></li></ul><ul><li><span class="en">X…extended precision</span> <span class="ja">X… 拡張精度</span></li><li><span class="en">S…single precision</span> <span class="ja">S… 単精度</span></li><li><span class="en">D…double precision</span> <span class="ja">D… 倍精度</span></li></ul><ul><li><span class="en">RN…round to nearest</span> <span class="ja">RN… 最近接偶数への丸め</span></li><li><span class="en">RZ…round toward zero</span> <span class="ja">RZ… ゼロへの丸め</span></li><li><span class="en">RM…round toward minus infinity</span> <span class="ja">RM… 負の無限大への丸め</span></li><li><span class="en">RP…round toward plus infinity</span> <span class="ja">RP… 正の無限大への丸め</span></li></ul><ul><li><span class="en">MI…negative (N)</span> <span class="ja">MI… 負数 (N)</span></li><li><span class="en">ZE…zero (Z)</span> <span class="ja">ZE… ゼロ (Z)</span></li><li><span class="en">IN…infinity (INF)</span> <span class="ja">IN… 無限大 (INF)</span></li><li><span class="en">NA…not a number or unordered (NAN)</span> <span class="ja">NA… 非数または比較不能 (NAN)</span></li><li><span class="en">BS…branch/set on unordered (BSUN)</span> <span class="ja">BS… 比較不能状態での分岐またはセット (BSUN)</span></li><li><span class="en">SN…signaling not a number (SNAN)</span> <span class="ja">SN… シグナリング NaN (SNAN)</span></li><li><span class="en">OE…operand error (OPERR)</span> <span class="ja">OE… オペランドエラー (OPERR)</span></li><li><span class="en">OF…overflow (OVFL)</span> <span class="ja">OF… オーバーフロー (OVFL)</span></li><li><span class="en">UF…underflow (UNFL)</span> <span class="ja">UF… アンダーフロー (UNFL)</span></li><li><span class="en">DZ…divide by zero (DZ)</span> <span class="ja">DZ… ゼロによる除算 (DZ)</span></li><li><span class="en">X2…inexact operation (INEX2)</span> <span class="ja">X2… 不正確な計算 (INEX2)</span></li><li><span class="en">X1…inexact decimal input (INEX1)</span> <span class="ja">X1… 不正確な 10 進数の入力 (INEX1)</span></li><li><span class="en">AV…invalid operation (IOP)</span> <span class="ja">AV… 不正な計算 (IOP)</span></li><li><span class="en">AO…overflow (OVFL)</span> <span class="ja">AO… オーバーフロー (OVFL)</span></li><li><span class="en">AU…underflow (UNFL)</span> <span class="ja">AU… アンダーフロー (UNFL)</span></li><li><span class="en">AZ…divide by zero (DZ)</span> <span class="ja">AZ… ゼロによる除算 (DZ)</span></li><li><span class="en">AX…inexact (INEX)</span> <span class="ja">AX… 不正確な結果 (INEX)</span></li></ul><h4>備考</h4><p>XEiJ の浮動小数点数の内部表現は MC68882 と異なり、拡張精度で言うところの「指数部が 0 でない非正規化数」や「小数部が 1 の並びでない NaN」をそのままの状態でレジスタに格納することができません。そのため、FMOVECR の一部がエラーになります。</p><p>MC68882 (実機) の FCOS、FSIN、FSINCOS、FTAN は引数の絶対値が大きくなるにつれて結果が意味をなさなくなります。このことはマニュアルに書かれていて開発当時の制約では諦めるしかなかったのだと思いますが、期待された結果ではないのでエラーになります。</p><p>MC68882 (実機) の FMOVECR で読み出される ROM の値はあちこち間違っているように見えますが、実機と同じ値を返さないとエラーになります。</p><p>MC68882 (実機) の FSGLDIV、FSGLMUL はアンダーフローしたとき、不正確な結果なのに FPSR の INEX2 と INEX をセットしなかったり、0 から遠ざかる方向に丸めなければならないのに切り捨てて 0 にしてしまうことがあります。これらは期待された結果ではないのでエラーになります。</p><h3><a href="#hypotrochoids" id="hypotrochoids">3.16. hypotrochoid.s </a></h3><p><span class="en"> The source code of <a href="#hypotrochoidx">hypotrochoid.x</a>. </span><span class="ja"> <a href="#hypotrochoidx">hypotrochoid.x</a>のソースコードです。 </span></p><h3><a href="#hypotrochoidx" id="hypotrochoidx">3.17. hypotrochoid.x </a></h3><p><span class="smallimg"><img alt="hypotrochoid.png" src="hypotrochoid.png"></span></p><p><span class="en">Draw a hypotrochoid on the pseudo graphic screen (background with 4096 patterns laid out). Blue (S) and purple (S) are sprite screens (BG0 and BG1), red (T) is a text screen, and green (G) is a graphic screen.</span> <span class="ja">疑似グラフィック画面 (4096 個のパターンを敷き詰めたバックグラウンド) にハイポトロコイドを描きます。青 (S) と紫 (S) はスプライト画面 (BG0 と BG1)、赤 (T) はテキスト画面、緑 (G) はグラフィック画面です。</span></p><p><span class="en">Turn on the the <a href="menu.htm#_4096patterns">4096 patterns checkbox</a>, the <a href="menu.htm#spr768x512">sprites displayed in 768x512 checkbox</a>, and the <a href="menu.htm#spr512bg1">BG1 displayed in 512x512 checkbox</a> in the <a href="menu.htm#modification">modification menu</a>, and reset before executing.</span> <span class="ja"><a href="menu.htm#modification">改造メニュー</a>の<a href="menu.htm#_4096patterns">4096 個のパターンチェックボックス</a>と<a href="menu.htm#spr768x512">768x512 でスプライトを表示チェックボックス</a>と<a href="menu.htm#spr512bg1">512x512 で BG1 を表示チェックボックス</a>を ON にしてリセットしてから実行します。</span></p><p><span class="en">Press BREAK/CTRL+C/ESC key to exit, other keys to stop during operation. While stopped, press ENTER key to resume and other keys to advance frame.</span> <span class="ja">BREAK/CTRL+C/ESC キーで終了、動作中はその他のキーで停止。停止中は ENTER キーで再開、その他のキーでコマ送りします。</span></p><p><span class="en">It does not work on the actual X68000 machine.</span> <span class="ja">X68000 実機では動きません。</span></p><h3><a href="#instructiontests" id="instructiontests">3.18. instructiontest.s</a></h3><p><a href="#instructiontestx">instructiontest.x</a> のソースです。<a href="http://retropc.net/x68000/software/develop/as/has060/" target="_blank">HAS060.X</a> version 3.09+89 以上でアセンブルできます。</p><h3><a href="#instructiontestx" id="instructiontestx">3.19. instructiontest.x</a></h3><p><span class="en">A program that tests integer instructions except for privilege instructions. It compares operand registers, memories, condition codes and the presence of an exception occurrence with real X68030 and 060turbo, and outputs OK or ERROR according to the result. The comparison is performed not for every value of operands but for every format of operands. So this program does not show which value brings wrong results. OK does not mean the implementation of the instruction is always exact. Because not all combination of operands are tested.</span> <span class="ja">MPU の特権命令を除く整数命令の動作をテストします。オペランドに書かれたレジスタまたはメモリとコンディションコードの変化およびゼロ除算などの例外発生の有無が実機 (X68030 または 060turbo) と一致しているときは OK、異なるときは ERROR と表示されます。比較は引数の形式毎に行われます。内容毎ではないので、どの引数を与えたときに実機と異なる結果になったのかこのプログラムではわかりません。もちろん、あらゆる引数の組み合わせをテストしているわけではないので、OK と表示されたからといって命令の動作が間違っていないとは限りません。</span></p><p><span class="en">Write the first few letters of a mnemonic to be tested on the command line. You can specify multiple instructions separated by commas. Write <code>all</code> to run all tests. Change the level of the test by inserting <code>easy</code> or <code>hard</code> before a mnemonic. Undefined bits in condition codes are ignored on <code>easy</code> and compared on <code>hard</code>. The default is <code>easy</code>. In addition, when a divide-by-zero occurs, Z and V are always ignored because these undefined condition codes are modified by causes other than operands in X68030.</span> <span class="ja">テストする命令のニモニックの先頭の文字をコマンドラインで指定します。命令は空白で区切って複数指定できます。<code>all</code> を指定するとすべてのテストが実行されます。ニモニックの手前に <code>easy</code> または <code>hard</code> と書くことでテストのレベルを選択できます。<code>easy</code> はコンディションコードの未定義のビットを無視します。<code>hard</code> はコンディションコードの未定義のビットまで一致していなければエラーになります。デフォルトは <code>easy</code> です。なお、ゼロ除算が発生したときの Z と V は MC68030 で引数以外の要因で変化することがあるので <code>hard</code> でも無視されます。</span></p><pre>B:\&gt;<kbd>instructiontest easy all hard all</kbd>
processor:MC68060, level:easy
           instruction               expected     actual
abcd.b Dr,Dq                        $59d7dfd3   $59d7dfd3   OK      1.72s
abcd.b -(Ar),-(Aq)                  $d4e484fa   $d4e484fa   OK      3.81s
add.b Dr,Dq                         $ba2388e4   $ba2388e4   OK      5.31s
add.w Dr,Dq                         $e7fbc8a3   $e7fbc8a3   OK      2.76s
<span class="note"><span class="en">―― Omission ――</span>
<span class="ja">―― 中略 ――</span></span>
tst.l #&lt;data&gt;                       $80995333   $80995333   OK      0.00s
unlk Ar                             $0b6076c4   $0b6076c4   OK      0.35s
unpk Dr,Dq,#&lt;data&gt;                  $4359d714   $4359d714   OK      0.67s
unpk -(Ar),-(Aq),#&lt;data&gt;            $5316c1a7   $5316c1a7   OK      1.18s
processor:MC68060, level:hard
           instruction               expected     actual
abcd.b Dr,Dq                        $fddca661   $fddca661   OK      1.99s
abcd.b -(Ar),-(Aq)                  $116c5546   $116c5546   OK      3.49s
chk.w (Ar),Dq                       $18ad244c   $18ad244c   OK      3.17s
chk.l (Ar),Dq                       $10d41b6b   $10d41b6b   OK      3.50s
<span class="note"><span class="en">―― Omission ――</span>
<span class="ja">―― 中略 ――</span></span>
nbcd.b Dr                           $60ea153e   $60ea153e   OK      0.06s
nbcd.b (Ar)                         $3d33357d   $3d33357d   OK      0.06s
sbcd.b Dr,Dq                        $acce4f74   $acce4f74   OK      1.83s
sbcd.b -(Ar),-(Aq)                  $d290f440   $d290f440   OK      3.55s
tested:542, passed:542(100.00%), failed:0(0.00%)
1005.15s
B:\&gt;</pre><h3><a href="#optimes" id="optimes">3.20. optime.s</a></h3><p><span class="en"> The source code of <a href="#optimex">optime.x</a>. </span><span class="ja"> <a href="#optimex">optime.x</a> のソースコードです。 </span></p><h3><a href="#optimex" id="optimex">3.21. optime.x</a></h3><p><span class="en"> Measure the execution time of instructions. </span><span class="ja"> 命令の実行時間を計ります。 </span></p><pre>B:\&gt;<kbd>optime.x</kbd>
optime.x (2023-09-17)
Measure the execution time of instructions
  -a has060  Assembler
  -f nop.s   File containing instructions
  -i &#34;nop&#34;   Semicolon-delimited instructions
  -s         Measure in SRAM. Ask when SRAM in use
  -sn        Same as -s but not measure when SRAM in use
  -sy        Same as -s but measure even when SRAM in use
  -t %temp%  Temporary directory
  -v         Output verbose messages
B:\&gt;<kbd>optime.x -i &#34;nop&#34;</kbd>
&#34;nop&#34;	0.412 us
B:\&gt;</pre><h3><a href="#optitestbat" id="optitestbat">3.22. optitest.bat</a></h3><p><span class="en"> A batch file that measures instruction execution time using <a href="#optimex">optime.x</a> and outputs the results to optitest.log. It is recommended to copy HAS060.X, optime.x and optitest.bat to the RAM disk and run them on the RAM disk. </span><span class="ja"> <a href="#optimex">optime.x</a> を使って命令の実行時間を計測し、結果を optitest.log へ出力するバッチファイルです。HAS060.X と optime.x と optitest.bat を RAM ディスクにコピーして、RAM ディスクで実行することをお勧めします。 </span></p><h3><a href="#pat4096tests" id="pat4096tests">3.23. pat4096test.s </a></h3><p><span class="en"> The source code of <a href="#pat4096testx">pat4096test.x</a>. </span><span class="ja"> <a href="#pat4096testx">pat4096test.x</a>のソースコードです。 </span></p><h3><a href="#pat4096testx" id="pat4096testx">3.24. pat4096test.x </a></h3><p><span class="smallimg"><img alt="pat4096test.png" src="pat4096test.png"></span></p><p><span class="en">Test <a href="feature.htm#_256sprites">256 sprites</a> and <a href="feature.htm#_4096patterns">4096 patterns</a>.</span> <span class="ja"><a href="feature.htm#_256sprites">256 枚のスプライト</a>と<a href="feature.htm#_4096patterns">4096 個のパターン</a>をテストします。</span></p><p><span class="en">Turn on the <a href="menu.htm#_256sprites">256 sprites checkbox</a> and the <a href="menu.htm#_4096patterns">4096 patterns checkbox</a> in the <a href="menu.htm#modification">modification menu</a>, and reset before executing.</span> <span class="ja"><a href="menu.htm#modification">改造メニュー</a>の<a href="menu.htm#_256sprites">256 枚のスプライトチェックボックス</a>と<a href="menu.htm#_4096patterns">4096 個のパターンチェックボックス</a>を ON にしてリセットしてから実行します。</span></p><p><span class="en">Press any key to exit.</span> <span class="ja">何かキーを押すと終了します。</span></p><p><span class="en">It does not work on the actual X68000 machine.</span> <span class="ja">X68000 実機では動きません。</span></p><h3><a href="#prwbit2s" id="prwbit2s">3.25. prwbit2.s </a></h3><p><span class="en">The source code of <a href="#prwbit2x">prwbit2.x</a>.</span> <span class="ja"><a href="#prwbit2x">prwbit2.x</a>のソースコードです。</span></p><h3><a href="#prwbit2x" id="prwbit2x">3.26. prwbit2.x </a></h3><p><span class="smallimg"><img alt="prwbit2.png" src="prwbit2.png"></span></p><p><span class="en">Check the operation of bit 2 of the 4th word (priority) of the sprite scroll register.</span> <span class="ja">スプライトスクロールレジスタの 4 ワード目 (プライオリティ) のビット 2 の動作を確認します。</span></p><h3><a href="#r00bit0tests" id="r00bit0tests">3.27. r00bit0test.s</a></h3><p><span class="en"> The source code of <a href="#r00bit0testx">r00bit0test.x</a>. </span><span class="ja"> <a href="#r00bit0testx">r00bit0test.x</a>のソースコードです。 </span></p><h3><a href="#r00bit0testx" id="r00bit0testx">3.28. r00bit0test.x</a></h3><p><span class="en"> Verify that bit 0 of CRTC R00 is fixed to 1. Create 384x256 screens with horizontal totals of 68, 69, and 70, and measure the vertical cycle for each. When measured on the actual X68030, the vertical period for a horizontal total of 69 is the same as the vertical period for a horizontal total of 70. On an emulator where bit 0 of CRTC R00 is not fixed to 1, the vertical period when the horizontal total is 69 is halfway between the vertical period when the horizontal total is 68 and the vertical period when the horizontal total is 70. </span><span class="ja"> CRTC R00 の bit0 が 1 に固定されていることを確認します。384x256 の画面を水平トータルが 68、69、70 の場合について作り、それぞれ垂直周期を計測します。X68030 実機で計測すると、水平トータルが 69 の場合の垂直周期が 70 の場合の垂直周期と同じになります。CRTC R00 の bit0 が 1 に固定されていないエミュレータでは、水平トータルが 69 の場合の垂直周期が 68 の場合の垂直周期と 70 の場合の垂直周期の中間になります。 </span></p><pre>B:\&gt;<kbd>r00bit0test.x</kbd>
r00bit0test.x (2024-02-17)
TEST 1: HTin=68 exp_HTout=68 exp_VP=17770 obs_VP=17770 obs_HTout=68 OK
TEST 2: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 3: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 4: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 5: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 6: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 7: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 8: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 9: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 10: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 11: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18291 obs_HTout=70 OK
TEST 12: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18293 obs_HTout=70 OK
TEST 13: HTin=69 exp_HTout=70 exp_VP=18293 obs_VP=18293 obs_HTout=70 OK
TEST 14: HTin=70 exp_HTout=70 exp_VP=18293 obs_VP=18293 obs_HTout=70 OK
B:\&gt;</pre><h3><a href="#smktests" id="smktests">3.29. smktest.s </a></h3><p><span class="en"> The source code of <a href="#smktestx">smktest.x</a>. </span><span class="ja"> <a href="#smktestx">smktest.x</a>のソースコードです。 </span></p><h3><a href="#smktestx" id="smktestx">3.30. smktest.x </a></h3><p><span class="en"> The program simply displays &#34;XEiJ meets ShiroMadoKun&#34; on ShiroMadoKun. XEiJ has a built-in <a href="feature.htm#shiromadokun">Shiromadokun emulator</a>. </span><span class="ja"> 白窓君に「XEiJ meets ShiroMadoKun」と表示するだけのプログラムです。XEiJ は<a href="feature.htm#shiromadokun">白窓君エミュレータ</a>を内蔵しています。 </span></p><h3><a href="#spr1016tests" id="spr1016tests">3.31. spr1016test.s </a></h3><p><span class="en"> The source code of <a href="#spr1016testx">spr1016test.x</a>. </span><span class="ja"> <a href="#spr1016testx">spr1016test.x</a>のソースコードです。 </span></p><h3><a href="#spr1016testx" id="spr1016testx">3.32. spr1016test.x </a></h3><p><span class="smallimg"><img alt="spr1016test.png" src="spr1016test.png"></span></p><p><span class="en">This is a test program to display 1016 sprites using only IOCS calls with sprdrv.x. Run it with the following settings.</span> <span class="ja">sprdrv.x を使って IOCS コールだけで 1016 枚のスプライトを表示するテストプログラムです。 以下の設定で実行してください。</span></p><ul><li><span class="en">Number of sprites is 1016</span> <span class="ja">スプライトの枚数は 1016</span></li><li><span class="en">4096 patterns</span> <span class="ja">4096 個のパターン</span></li><li><span class="en">Display sprites at 768x512</span> <span class="ja">768x512 でスプライトを表示</span></li><li><span class="en">Number of sprites per raster is 1016</span> <span class="ja">ラスタあたりのスプライトの枚数は 1016</span></li><li><span class="en">Resident sprdrv.x</span> <span class="ja">sprdrv.x を常駐させる</span></li></ul><h3><a href="#spr256tests" id="spr256tests">3.33. spr256test.s </a></h3><p><span class="en"> The source code of <a href="#spr256testx">spr256test.x</a>. </span><span class="ja"> <a href="#spr256testx">spr256test.x</a>のソースコードです。 </span></p><h3><a href="#spr256testx" id="spr256testx">3.34. spr256test.x </a></h3><p><span class="smallimg"><img alt="spr256test.png" src="spr256test.png"></span></p><p><span class="en"> Test <a href="feature.htm#_256sprites">256 sprites</a>. Turn on the <a href="menu.htm#_256sprites">256 sprites checkbox</a> in the <a href="menu.htm#modification">modification menu</a>, change the <a href="menu.htm#sprras">number of sprites per raster spinner</a> to 256, and then run the program. </span><span class="ja"> <a href="feature.htm#_256sprites">256 枚のスプライト</a>をテストします。 <a href="menu.htm#modification">改造メニュー</a>の<a href="menu.htm#_256sprites">256 枚のスプライトチェックボックス</a>を ON に、<a href="menu.htm#sprras">ラスタあたりのスプライトの枚数スピナー</a>を 256 に変更してから実行します。 </span></p><h3><a href="#spr768x512s" id="spr768x512s">3.35. spr768x512.s </a></h3><p><span class="en"> The source code of <a href="#spr768x512x">spr768x512.x</a>. </span><span class="ja"> <a href="#spr768x512x">spr768x512.x</a>のソースコードです。 </span></p><h3><a href="#spr768x512x" id="spr768x512x">3.36. spr768x512.x </a></h3><p><span class="smallimg"><img alt="spr768x512.png" src="spr768x512.png"></span></p><p><span class="en">Test <a href="feature.htm#_256sprites">256 sprites</a>, <a href="feature.htm#_4096patterns">4096 patterns</a> and <a href="feature.htm#spr768x512">sprites displayed in 768x512</a>.</span> <span class="ja"><a href="feature.htm#_256sprites">256 枚のスプライト</a>と<a href="feature.htm#_4096patterns">4096 個のパターン</a>と<a href="feature.htm#spr768x512">768x512 でスプライトを表示</a>をテストします。</span></p><p><span class="en">Turn on the <a href="menu.htm#_256sprites">256 sprites checkbox</a>, the <a href="menu.htm#_4096patterns">4096 patterns checkbox</a>, and the <a href="menu.htm#spr768x512">sprites displayed in 768x512 checkbox</a> in the <a href="menu.htm#modification">modification menu</a>, and reset before executing.</span> <span class="ja"><a href="menu.htm#modification">改造メニュー</a>の<a href="menu.htm#_256sprites">256 枚のスプライトチェックボックス</a>と<a href="menu.htm#_4096patterns">4096 個のパターンチェックボックス</a>と<a href="menu.htm#spr768x512">768x512 でスプライトを表示チェックボックス</a>を ON にしてリセットしてから実行します。</span></p><p><span class="en">Press any key to exit.</span> <span class="ja">何かキーを押すと終了します。</span></p><p><span class="en">It does not work on the actual X68000 machine.</span> <span class="ja">X68000 実機では動きません。</span></p><h3><a href="#sprdrvs" id="sprdrvs">3.37. sprdrv.s </a></h3><p><span class="en"> The source code of <a href="#sprdrvx">sprdrv.x</a>. </span><span class="ja"> <a href="#sprdrvx">sprdrv.x</a>のソースコードです。 </span></p><h3><a href="#sprdrvx" id="sprdrvx">3.38. sprdrv.x </a></h3><p><span class="en">Extended sprite and background driver</span> <span class="ja">拡張スプライト・バックグラウンドドライバ</span></p><p><span class="en">Enables XEiJ extensions to be used with sprite and background related IOCS calls. Processes that have enabled extensions with _SP_INIT will disable them when they exit. See sprdrv.s for details.</span> <span class="ja">スプライト・バックグラウンド関連の IOCS コールで XEiJ の拡張機能を使用できるようにします。_SP_INIT で拡張機能を有効にしたプロセスが終了するとき拡張機能を無効にします。 詳細は sprdrv.s を参照してください。</span></p><h3><a href="#vcntests" id="vcntests">3.39. vcntest.s</a></h3><p><span class="en">The source code of <a href="#vcntestx">vcntest.x</a>.</span> <span class="ja"><a href="#vcntestx">vcntest.x</a> のソースです。</span></p><h3><a href="#vcntestx" id="vcntestx">3.40. vcntest.x</a></h3><p><span class="smallimg"><img alt="vcntest.png" src="vcntest.png"></span></p><p><span class="en">A tool to check the action of the video controller. Operate it with a mouse.</span> <span class="ja">ビデオコントローラの動作を確認するためのツールです。マウスで操作します。</span></p><p><span class="en">Command</span> <span class="ja">コマンド</span></p><ul><li><span class="en">TEST…Show the screen that consists of the specified parameters</span> <span class="ja">TEST… 設定された画面を表示します</span></li><li><span class="en">RESET…Return to the initial state</span> <span class="ja">RESET… 初期状態に戻します</span></li><li><span class="en">EXIT…Exit the program. ESC key and the right button of mouse are also available.</span> <span class="ja">EXIT… 終了します。ESC キーまたはマウスの右ボタンでも終了します</span></li></ul><p><span class="en">Priority of sprite, text and graphic</span> <span class="ja">スプライトとテキストとグラフィックの優先順位</span></p><ul><li><span class="en">SP PRW 0/1/2/3…Priority of the sprite screen (SpPr)</span> <span class="ja">SP PRW 0/1/2/3… スプライト画面の優先順位 (SpPr)</span></li><li><span class="en">TX PRW 0/1/2/3…Priority of the text screen (TxPr)</span> <span class="ja">TX PRW 0/1/2/3… テキスト画面の優先順位 (TxPr)</span></li><li><span class="en">GR PRW 0/1/2/3…Priority of the graphic screen (GrPr)</span> <span class="ja">GR PRW 0/1/2/3… グラフィック画面の優先順位 (GrPr)</span></li></ul><p><span class="en">Priority of graphic planes</span> <span class="ja">グラフィックプレーンの優先順位</span></p><ul><li><span class="en">GR 1ST 0/1/2/3…4bit page number of the first graphic plane (G1st)</span> <span class="ja">GR 1ST 0/1/2/3…1 番目のグラフィックプレーンの 4bit ページ番号 (G1st)</span></li><li><span class="en">GR 2ND 0/1/2/3…4bit page number of the second graphic plane (G2nd)</span> <span class="ja">GR 2ND 0/1/2/3…2 番目のグラフィックプレーンの 4bit ページ番号 (G2nd)</span></li><li><span class="en">GR 3RD 0/1/2/3…4bit page number of the third graphic plane (G3rd)</span> <span class="ja">GR 3RD 0/1/2/3…3 番目のグラフィックプレーンの 4bit ページ番号 (G3rd)</span></li><li><span class="en">GR 4TH 0/1/2/3…4bit page number of the fourth graphic plane (G4th)</span> <span class="ja">GR 4TH 0/1/2/3…4 番目のグラフィックプレーンの 4bit ページ番号 (G4th)</span></li></ul><p><span class="en">Turn screens on and off</span> <span class="ja">画面の ON/OFF</span></p><ul><li><span class="en">SP OFF/ON…Turn the sprite screen on and off (SpOn)</span> <span class="ja">SP OFF/ON… スプライト画面の ON/OFF (SpOn)</span></li><li><span class="en">TX OFF/ON…Turn the text screen on and off (TxOn)</span> <span class="ja">TX OFF/ON… テキスト画面の ON/OFF (TxOn)</span></li><li><span class="en">1ST OFF/ON…Turn the first graphic plane on and off (G1On)</span> <span class="ja">1ST OFF/ON…1 番目のグラフィックプレーンの ON/OFF (G1On)</span></li><li><span class="en">2ND OFF/ON…Turn the second graphic plane on and off (G2On)</span> <span class="ja">2ND OFF/ON…2 番目のグラフィックプレーンの ON/OFF (G2On)</span></li><li><span class="en">3RD OFF/ON…Turn the third graphic plane on and off (G3On)</span> <span class="ja">3RD OFF/ON…3 番目のグラフィックプレーンの ON/OFF (G3On)</span></li><li><span class="en">4TH OFF/ON…Turn the fourth graphic plane on and off (G4On)</span> <span class="ja">4TH OFF/ON…4 番目のグラフィックプレーンの ON/OFF (G4On)</span></li><li><span class="en">1024 OFF/ON…Turn the 1024 dot graphic screen on and off (GxOn)</span> <span class="ja">1024 OFF/ON…1024 ドットのグラフィック画面の ON/OFF (GxOn)</span></li></ul><p><span class="en">Memory mode</span> <span class="ja">メモリモード</span></p><ul><li><span class="en">512 x 16 x 4…512 dots 16 colors 4 planes (GrMM=0)</span> <span class="ja">512 x 16 x 4…512 ドット 16 色 4 プレーン (GrMM=0)</span></li><li><span class="en">512 x 256 x 2…512 dots 256 colors 2 planes (GrMM=1)</span> <span class="ja">512 x 256 x 2…512 ドット 256 色 2 プレーン (GrMM=1)</span></li><li><span class="en">512 x 65536 x 1…512 dots 65536 colors 1 plane (GrMM=3)</span> <span class="ja">512 x 65536 x 1…512 ドット 65536 色 1 プレーン (GrMM=3)</span></li><li><span class="en">1024 x 16 x 1…1024 dots 16 colors 1 plane (GrMM=4)</span> <span class="ja">1024 x 16 x 1…1024 ドット 16 色 1 プレーン (GrMM=4)</span></li></ul><p><span class="en">Zero translucence</span> <span class="ja">ゼロ半透明</span></p><ul><li><span class="en">NORMAL…Normal (AHOn=0)</span> <span class="ja">NORMAL… ノーマル (AHOn=0)</span></li><li><span class="en">GR+TX 00…Blend the graphic color and the text color $00 (AHOn=1) (A)</span> <span class="ja">GR+TX 00… グラフィックカラーとテキストパレット $00 のカラーを混ぜる (AHOn=1) (A)</span></li></ul><p><span class="en">Special priority and trancelucence</span> <span class="ja">特殊プライオリティと半透明</span></p><ul><li><span class="en">NORMAL…Normal (ExOn=0)</span> <span class="ja">NORMAL… ノーマル (ExOn=0)</span></li><li><span class="en">SPECIAL PRIORITY…Special priority (ExOn=1,Half=0) (XW)</span> <span class="ja">SPECIAL PRIORITY… 特殊プライオリティ (ExOn=1,Half=0) (XW)</span></li><li><span class="en">TRANSLUCENT…Translucence (ExOn=1,Half=1) (XP)</span> <span class="ja">TRANSLUCENT… 半透明 (ExOn=1,Half=1) (XP)</span></li></ul><p><span class="en">Region designation</span> <span class="ja">領域指定</span></p><ul><li><span class="en">LSB OF COLOR CODE…The color code, a content of the pallet table, is an odd number (PLSB=0) (C)</span> <span class="ja">LSB OF COLOR CODE… カラー (パレットテーブルの内容) が奇数 (PLSB=0) (C)</span></li><li><span class="en">LSB OF PALET CODE…The pallet code, a content of the graphic VRAM, is an odd number (PLSB=1) (P)</span> <span class="ja">LSB OF PALET CODE… パレット (GVRAM の内容) が奇数 (PLSB=1) (P)</span></li></ul><p><span class="en">Translucence</span> <span class="ja">半透明</span></p><ul><li><span class="en">1ST…Do not blend (GrGr=0,GrST=0)</span> <span class="ja">1ST… 半透明なし (GrGr=0,GrST=0)</span></li><li><span class="en">1ST+SP/TX…Blend the first graphic plane with the sprite and text screen behind (GrGr=0,GrST=1) (T)</span> <span class="ja">1ST+SP/TX…1 番目と奥のスプライト・テキストを半透明 (GrGr=0,GrST=1) (T)</span></li><li><span class="en">1ST+2ND…Blend the first graphic plane with the second graphic plane (GrGr=1,GrST=0) (G)</span> <span class="ja">1ST+2ND…1 番目と 2 番目を半透明 (GrGr=1,GrST=0) (G)</span></li><li><span class="en">1ST+2ND+SP/TX…Blend the first graphic plane with the second graphic plane, and blend it with the sprite and text screen behind (GrGr=1,GrST=1) (GT)</span> <span class="ja">1ST+2ND+SP/TX…1 番目と 2 番目を半透明、さらに奥のスプライト・テキストを半透明 (GrGr=1,GrST=1) (GT)</span></li></ul><p><span class="en">Text pallet</span> <span class="ja">テキストのパレット</span></p><ul><li><span class="en">TXT FILL 00/01…Text pallet</span> <span class="ja">TXT FILL 00/01… テキストのパレット</span></li></ul><p><span class="en">Pallet and priority of sprites</span> <span class="ja">スプライトのパレットと優先順位</span></p><ul><li><span class="en">SPR FILL 00/01/10/11/20/21/30/31…Pallet of sprites</span> <span class="ja">SPR FILL 00/01/10/11/20/21/30/31… スプライトのパレット</span></li><li><span class="en">SPR PRW 0/1/2/3…Priority of sprites</span> <span class="ja">SPR PRW 0/1/2/3… スプライトの優先順位</span></li></ul><p><span class="en">Pallet of background planes</span> <span class="ja">バックグラウンドのパレット</span></p><ul><li><span class="en">BG0 FILL 00/01/10/11/20/21/30/31…Pallet of background plane 0</span> <span class="ja">BG0 FILL 00/01/10/11/20/21/30/31… バックグラウンド 0 のパレット</span></li><li><span class="en">BG1 FILL 00/01/10/11/20/21/30/31…Pallet of background plane 1</span> <span class="ja">BG1 FILL 00/01/10/11/20/21/30/31… バックグラウンド 1 のパレット</span></li></ul><p><span class="en">Color of text pallets</span> <span class="ja">テキストパレットのカラー</span></p><ul><li><span class="en">TX 00 TRANSPARENT/BLACK+1/GRAY/SILVER/WHITE…Color of text pallet $00</span> <span class="ja">TX 00 TRANSPARENT/BLACK+1/GRAY/SILVER/WHITE… テキストパレット $00 のカラー</span></li><li><span class="en">TX 01 TRANSPARENT/BLACK+1/ORANGE…Color of text pallet $01</span> <span class="ja">TX 01 TRANSPARENT/BLACK+1/ORANGE… テキストパレット $01 のカラー</span></li></ul><p><span class="en">Color of sprite pallets</span> <span class="ja">スプライトパレットのカラー</span></p><ul><li><span class="en">SP 10 TRANSPARENT/PURPLE…Color of sprite pallet $10</span> <span class="ja">SP 10 TRANSPARENT/PURPLE… スプライトパレット $10 のカラー</span></li><li><span class="en">SP 11 TRANSPARENT/FUCHSIA…Color of sprite pallet $11</span> <span class="ja">SP 11 TRANSPARENT/FUCHSIA… スプライトパレット $11 のカラー</span></li><li><span class="en">SP 20 TRANSPARENT/TEAL…Color of sprite pallet $20</span> <span class="ja">SP 20 TRANSPARENT/TEAL… スプライトパレット $20 のカラー</span></li><li><span class="en">SP 21 TRANSPARENT/AQUA…Color of sprite pallet $21</span> <span class="ja">SP 21 TRANSPARENT/AQUA… スプライトパレット $21 のカラー</span></li><li><span class="en">SP 30 TRANSPARENT/OLIVE…Color of sprite pallet $30</span> <span class="ja">SP 30 TRANSPARENT/OLIVE… スプライトパレット $30 のカラー</span></li><li><span class="en">SP 31 TRANSPARENT/YELLOW…Color of sprite pallet $31</span> <span class="ja">SP 31 TRANSPARENT/YELLOW… スプライトパレット $31 のカラー</span></li></ul><p><span class="en">Turn background planes on and off</span> <span class="ja">バックグラウンドの ON/OFF</span></p><ul><li><span class="en">BG0 OFF/ON…Turn background plane 0 on and off</span> <span class="ja">BG0 OFF/ON… バックグラウンド 0 の ON/OFF</span></li><li><span class="en">BG1 OFF/ON…Turn background plane 1 on and off</span> <span class="ja">BG1 OFF/ON… バックグラウンド 1 の ON/OFF</span></li></ul><p><span class="en">Pallet of graphic planes</span> <span class="ja">グラフィックプレーンのパレット</span></p><ul><li><span class="en">GR0 FILL 0000/0001/0002/0003/0004/0005/0006/0007/0010/0011/2020/2121…Pallet of graphic plane 0</span> <span class="ja">GR0 FILL 0000/0001/0002/0003/0004/0005/0006/0007/0010/0011/2020/2121… グラフィックプレーン 0 のパレット</span></li><li><span class="en">GR1 FILL 0000/0001/0002/0003/0004/0005/0006/0007/0010/0011…Pallet of graphic plane 1</span> <span class="ja">GR1 FILL 0000/0001/0002/0003/0004/0005/0006/0007/0010/0011… グラフィックプレーン 1 のパレット</span></li><li><span class="en">GR2 FILL 0000/0001/0002/0003/0004/0005…Pallet of graphic plane 2</span> <span class="ja">GR2 FILL 0000/0001/0002/0003/0004/0005… グラフィックプレーン 2 のパレット</span></li><li><span class="en">GR3 FILL 0000/0001/0002/0003/0004/0005…Pallet of graphic plane 3</span> <span class="ja">GR3 FILL 0000/0001/0002/0003/0004/0005… グラフィックプレーン 3 のパレット</span></li></ul><p><span class="en">Color of graphic pallets</span> <span class="ja">グラフィックパレットのカラー</span></p><ul><li><span class="en">GR 0000 TRANSPARENT/BLACK+1/WHITE/WHITE+1…Color of graphic pallet $0000</span> <span class="ja">GR 0000 TRANSPARENT/BLACK+1/WHITE/WHITE+1… グラフィックパレット $0000 のカラー</span></li><li><span class="en">GR 0001 TRANSPARENT/BLACK+1/LIME/LIME+1…Color of graphic pallet $0001</span> <span class="ja">GR 0001 TRANSPARENT/BLACK+1/LIME/LIME+1… グラフィックパレット $0001 のカラー</span></li><li><span class="en">GR 0002 RED/RED+1…Color of graphic pallet $0002</span> <span class="ja">GR 0002 RED/RED+1… グラフィックパレット $0002 のカラー</span></li><li><span class="en">GR 0003 BLUE/BLUE+1…Color of graphic pallet $0003</span> <span class="ja">GR 0003 BLUE/BLUE+1… グラフィックパレット $0003 のカラー</span></li><li><span class="en">GR 0004 FUCHSIA/FUCHSIA+1…Color of graphic pallet $0004</span> <span class="ja">GR 0004 FUCHSIA/FUCHSIA+1… グラフィックパレット $0004 のカラー</span></li><li><span class="en">GR 0005 AQUA/AQUA+1…Color of graphic pallet $0005</span> <span class="ja">GR 0005 AQUA/AQUA+1… グラフィックパレット $0005 のカラー</span></li><li><span class="en">GR 0006 YELLOW/YELLOW+1…Color of graphic pallet $0006</span> <span class="ja">GR 0006 YELLOW/YELLOW+1… グラフィックパレット $0006 のカラー</span></li><li><span class="en">GR 0007 PURPLE/PURPLE+1…Color of graphic pallet $0007</span> <span class="ja">GR 0007 PURPLE/PURPLE+1… グラフィックパレット $0007 のカラー</span></li><li><span class="en">GR 0010 TEAL/TEAL+1…Color of graphic pallet $0010</span> <span class="ja">GR 0010 TEAL/TEAL+1… グラフィックパレット $0010 のカラー</span></li><li><span class="en">GR 0011 OLIVE/OLIVE+1…Color of graphic pallet $0011</span> <span class="ja">GR 0011 OLIVE/OLIVE+1… グラフィックパレット $0011 のカラー</span></li><li><span class="en">GR 2020 TRANSPARENT/BLACK+1…Color of graphic pallet $2020</span> <span class="ja">GR 2020 TRANSPARENT/BLACK+1… グラフィックパレット $2020 のカラー</span></li><li><span class="en">GR 2121 WHITE/WHITE+1…Color of graphic pallet $2121</span> <span class="ja">GR 2121 WHITE/WHITE+1… グラフィックパレット $2121 のカラー</span></li></ul><h3><a href="#vcntest2s" id="vcntest2s">3.41. vcntest2.s</a></h3><p><span class="en">The source code of <a href="#vcntest2x">vcntest2.x</a></span> <span class="ja"><a href="#vcntest2x">vcntest2.x</a> のソースコードです。</span></p><h3><a href="#vcntest2x" id="vcntest2x">3.42. vcntest2.x</a></h3><p><span class="smallimg"><img alt="vcntest2.png" src="vcntest2.png"></span></p><p><span class="en">A program that actually tests examples written as comments in the source code of the video controller. The kanji &#34; 黄 &#34;, which means yellow, should be painted yellow. The kanji &#34; 赤 &#34;, which means red, should be painted red. All kanji should be painted by the color of its meaning. Hit a key to go to the next test.</span> <span class="ja">ビデオコントローラのソースコードの注釈に書いた例を実際に試すプログラムです。『黄』は黄色で、『赤』は赤で、すべての漢字はその意味の色で塗られなければなりません。キーを押すと次のテストに進みます。</span></p><p><span class="en">Below, the verb &#34;evenize&#34; denotes &#34;clear the least significant bit&#34; and the verb &#34;oddize&#34; denotes &#34;set the least significant bit&#34;. These bit operations are equivalent to x&amp;-2 and x|1.</span> <span class="ja">以下では、偶数化は最下位ビットをクリアすることを意味し、奇数化は最下位ビットをセットすることを意味します。これらのビット演算は x&amp;-2 および x|1 と等価です。</span></p><h4>SE1T</h4><h5><span class="en">A1 黄 (yellow)</span> <span class="ja">A1 黄 (黄色)</span></h5><p><span class="en">Three screens are displayed. The order of screens from the near side are the sprite screen, the graphic screen and the text screen. The pallet code of the sprite screen is $10 and its color is yellow. The color of the graphic screen is red. The pallet code of the text screen is $0 and its color is black. Because all 4bit pallet code of the sprite screen and the text screen is zero and the 8bit pallet code of the sprite screen is not zero, the sprite screen is retained and the text screen is removed. The color of the nearest non-zero color code is yellow, which is the color of the sprite screen.</span> <span class="ja">3 枚の画面が表示されます。画面の順序は手前からスプライト画面、グラフィック画面、テキスト画面です。スプライト画面のパレットコードは $10、色は黄色です。グラフィック画面の色は赤です。テキスト画面のパレットコードは $0、色は黒です。スプライト画面とテキスト画面の 4bit パレットコードがすべて 0 でスプライト画面の 8bit パレットコードが 0 ではないので、スプライト画面を残してテキスト画面を取り除きます。一番手前の 0 でないカラーコードの色はスプライト画面の黄色です。</span></p><h5><span class="en">A2 赤 (red)</span> <span class="ja">A2 赤 (赤)</span></h5><p><span class="en">Three screens are displayed. The order of screens from the near side are the sprite screen, the graphic screen and the text screen. The pallet code of the sprite screen is $10 and its color is yellow. The color of the graphic screen is red. The pallet code of the text screen is $1 and its color is gray. Because the 4bit pallet code of the sprite screen is zero and the 4bit pallet code of the text screen is not zero, the text screen is retained and the sprite screen is removed. The color of the nearest non-zero color code is red, which is the color of the graphic screen.</span> <span class="ja">3 枚の画面が表示されます。画面の順序は手前からスプライト画面、グラフィック画面、テキスト画面です。スプライト画面のパレットコードは $10、色は黄色です。グラフィック画面の色は赤です。テキスト画面のパレットコードは $1、色は灰色です。スプライト画面の 4bit パレットコードが 0 でテキスト画面の 4bit パレットコードが 0 ではないので、テキスト画面を残してスプライト画面を取り除きます。一番手前の 0 でないカラーコードの色はグラフィック画面の赤です。</span></p><h4>E2_XHPG</h4><h5><span class="en">B1 赤 (red)</span> <span class="ja">B1 赤 (赤)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2 and it is red. The pallet code of the second graphic plane is 2 and it is red. The first graphic plane and the second graphic plane are not blended because the pallet code of the first graphic plane is an even number. Red, which is the color of the first graphic plane, is outputted because the pallet code of the first graphic plane is not zero.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤です。2 番目のグラフィックプレーンのパレットコードは 2、色は赤です。1 番目のグラフィックプレーンのパレットコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。1 番目のグラフィックプレーンのパレットコードが 0 ではないので 1 番目のグラフィックプレーンの色の赤が出力されます。</span></p><h5><span class="en">B2 赤 (red)</span> <span class="ja">B2 赤 (赤)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2 and it is red. The pallet code of the second graphic plane is 3 and it is blue. The first graphic plane and the second graphic plane are not blended because the pallet code of the first graphic plane is an even number. Red, which is the color of the first graphic plane, is outputted because the pallet code of the first graphic plane is not zero.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤です。2 番目のグラフィックプレーンのパレットコードは 3、色は青です。1 番目のグラフィックプレーンのパレットコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。1 番目のグラフィックプレーンのパレットコードが 0 ではないので 1 番目のグラフィックプレーンの色の赤が出力されます。</span></p><h5><span class="en">B3 紫 (fuchsia)</span> <span class="ja">B3 紫 (赤紫)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 2 and it is red. The first graphic plane and the second graphic plane are blended because the pallet code of the first graphic plane is an odd number. The evenized pallet code of the first graphic plane is 2 and it is red. The oddized pallet code of the second graphic plane is 3 and it is blue. Red, which is the color of the evenized pallet code of the first graphic plane, and blue, which is the color of the oddized pallet code of the second graphic plane, are blended and become fuchsia.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 2、色は赤です。1 番目のグラフィックプレーンのパレットコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤です。2 番目のグラフィックプレーンの奇数化したパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の青が混ざって赤紫になります。</span></p><h5><span class="en">B4 紫 (fuchsia)</span> <span class="ja">B4 紫 (赤紫)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 3 and it is blue. The first graphic plane and the second graphic plane are blended because the pallet code of the first graphic plane is an odd number. The evenized pallet code of the first graphic plane is 2 and it is red. The oddized pallet code of the second graphic plane is 3 and it is blue. Red, which is the color of the evenized pallet code of the first graphic plane, and blue, which is the color of the oddized pallet code of the second graphic plane, are blended and become fuchsia.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 3、色は青です。1 番目のグラフィックプレーンのパレットコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤です。2 番目のグラフィックプレーンの奇数化したパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の青が混ざって赤紫になります。</span></p><h4>E2_XHCG</h4><p><span class="en">In the following tests, the color of the pallet code 2 is red, its color code is an even number, the color of the pallet code 3 is blue, the color of the pallet code 4 is fuchsia and the color of the pallet code 5 is aqua.</span> <span class="ja">以下のテストでは、パレットコード 2 の色は赤、カラーコードは偶数、パレットコード 3 の色は青、パレットコード 4 の色は赤紫、パレットコード 5 の色は水色です。</span></p><h5><span class="en">C1 赤 (red)</span> <span class="ja">C1 赤 (赤)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2, it is red and its color code is an even number. The pallet code of the second graphic plane is 2 and it is red. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an even number. The first graphic plane and the second graphic plane are not blended because the color code of the evenized pallet code of the first graphic plane is an even number. Red, which is the color of the first graphic plane, is outputted because the pallet code of the first graphic plane is an even number.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤、カラーコードは偶数です。2 番目のグラフィックプレーンのパレットコードは 2、色は赤です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは偶数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。1 番目のグラフィックプレーンのパレットコードが偶数なので 1 番目のグラフィックプレーンの色の赤が出力されます。</span></p><h5><span class="en">C2 赤 (red)</span> <span class="ja">C2 赤 (赤)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2, it is red and its color code is an even number. The pallet code of the second graphic plane is 3 and it is blue. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an even number. The first graphic plane and the second graphic plane are not blended because the color code of the evenized pallet code of the first graphic plane is an even number. Red, which is the color of the first graphic plane, is outputted because the pallet code of the first graphic plane is an even number.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤、カラーコードは偶数です。2 番目のグラフィックプレーンのパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは偶数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。1 番目のグラフィックプレーンのパレットコードが偶数なので 1 番目のグラフィックプレーンの色の赤が出力されます。</span></p><h5><span class="en">C3 赤 (red)</span> <span class="ja">C3 赤 (赤)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2, it is red and its color code is an even number. The pallet code of the second graphic plane is 4 and it is fuchsia. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an even number. The first graphic plane and the second graphic plane are not blended because the color code of the evenized pallet code of the first graphic plane is an even number. Red, which is the color of the first graphic plane, is outputted because the pallet code of the first graphic plane is an even number.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤、カラーコードは偶数です。2 番目のグラフィックプレーンのパレットコードは 4、色は赤紫です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは偶数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。1 番目のグラフィックプレーンのパレットコードが偶数なので 1 番目のグラフィックプレーンの色の赤が出力されます。</span></p><h5><span class="en">C4 赤 (red)</span> <span class="ja">C4 赤 (赤)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2, it is red and its color code is an even number. The pallet code of the second graphic plane is 5 and it is aqua. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an even number. The first graphic plane and the second graphic plane are not blended because the color code of the evenized pallet code of the first graphic plane is an even number. Red, which is the color of the first graphic plane, is outputted because the pallet code of the first graphic plane is an even number.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤、カラーコードは偶数です。2 番目のグラフィックプレーンのパレットコードは 5、色は水色です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは偶数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。1 番目のグラフィックプレーンのパレットコードが偶数なので 1 番目のグラフィックプレーンの色の赤が出力されます。</span></p><h5><span class="en">C5 青 (blue)</span> <span class="ja">C5 青 (青)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 2 and it is red. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an even number. The first graphic plane and the second graphic plane are not blended because the color code of the evenized pallet code of the first graphic plane is an even number. The oddized pallet code of the second graphic plane is 3 and it is blue. Blue, which is the color of the oddized pallet code of the second graphic plane, is outputted because the pallet code of the first graphic plane is an odd number.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 2、色は赤です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは偶数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。2 番目のグラフィックプレーンの奇数化したパレットコードは 3、色は青です。1 番目のグラフィックプレーンのパレットコードが奇数なので 2 番目のグラフィックプレーンの奇数化したパレットコードの色の青が出力されます。</span></p><h5><span class="en">C6 青 (blue)</span> <span class="ja">C6 青 (青)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 3 and it is blue. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an even number. The first graphic plane and the second graphic plane are not blended because the color code of the evenized pallet code of the first graphic plane is an even number. The oddized pallet code of the second graphic plane is 3 and it is blue. Blue, which is the color of the oddized pallet code of the second graphic plane, is outputted because the pallet code of the first graphic plane is an odd number.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは偶数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。2 番目のグラフィックプレーンの奇数化したパレットコードは 3、色は青です。1 番目のグラフィックプレーンのパレットコードが奇数なので 2 番目のグラフィックプレーンの奇数化したパレットコードの色の青が出力されます。</span></p><h5><span class="en">C7 水 (aqua)</span> <span class="ja">C7 水 (水色)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 4 and it is fuchsia. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an even number. The first graphic plane and the second graphic plane are not blended because the color code of the evenized pallet code of the first graphic plane is an even number. The oddized pallet code of the second graphic plane is 5 and it is aqua. Aqua, which is the color of the oddized pallet code of the second graphic plane, is outputted because the pallet code of the first graphic plane is an odd number.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 4、色は赤紫です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは偶数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。2 番目のグラフィックプレーンの奇数化したパレットコードは 5、色は水色です。1 番目のグラフィックプレーンのパレットコードが奇数なので 2 番目のグラフィックプレーンの奇数化したパレットコードの色の水色が出力されます。</span></p><h5><span class="en">C8 水 (aqua)</span> <span class="ja">C8 水 (水色)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 5 and it is aqua. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an even number. The first graphic plane and the second graphic plane are not blended because the color code of the evenized pallet code of the first graphic plane is an even number. The oddized pallet code of the second graphic plane is 5 and it is aqua. Aqua, which is the color of the oddized pallet code of the second graphic plane, is outputted because the pallet code of the first graphic plane is an odd number.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 5、色は水色です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは偶数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが偶数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンは混ざりません。2 番目のグラフィックプレーンの奇数化したパレットコードは 5、色は水色です。1 番目のグラフィックプレーンのパレットコードが奇数なので 2 番目のグラフィックプレーンの奇数化したパレットコードの色の水色が出力されます。</span></p><p><span class="en">In the following tests, the color of the pallet code 2 is red, its color code is an odd number, the color of the pallet code 3 is blue, the color of the pallet code 4 is fuchsia and the color of the pallet code 5 is aqua.</span> <span class="ja">以下のテストでは、パレットコード 2 の色は赤、カラーコードは奇数、パレットコード 3 の色は青、パレットコード 4 の色は赤紫、パレットコード 5 の色は水色です。</span></p><h5><span class="en">D1 紫 (fuchsia)</span> <span class="ja">D1 紫 (赤紫)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The pallet code of the second graphic plane is 2 and it is red. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The first graphic plane and the second graphic plane are blended because the color code of the evenized pallet code of the first graphic plane is an odd number. The oddized pallet code of the second graphic plane is 3 and it is blue. Red, which is the color of the evenized pallet code of the first graphic plane, and blue, which is the color of the oddized pallet code of the second graphic plane, are blended and become fuchsia.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤、カラーコードは奇数です。2 番目のグラフィックプレーンのパレットコードは 2、色は赤です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは奇数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。2 番目のグラフィックプレーンの奇数化したパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の青が混ざって赤紫になります。</span></p><h5><span class="en">D2 紫 (fuchsia)</span> <span class="ja">D2 紫 (赤紫)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The pallet code of the second graphic plane is 3 and it is blue. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The first graphic plane and the second graphic plane are blended because the color code of the evenized pallet code of the first graphic plane is an odd number. The oddized pallet code of the second graphic plane is 3 and it is blue. Red, which is the color of the evenized pallet code of the first graphic plane, and blue, which is the color of the oddized pallet code of the second graphic plane, are blended and become fuchsia.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤、カラーコードは奇数です。2 番目のグラフィックプレーンのパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは奇数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。2 番目のグラフィックプレーンの奇数化したパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の青が混ざって赤紫になります。</span></p><h5><span class="en">D3 灰 (gray)</span> <span class="ja">D3 灰 (灰色)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The pallet code of the second graphic plane is 4 and it is fuchsia. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The first graphic plane and the second graphic plane are blended because the color code of the evenized pallet code of the first graphic plane is an odd number. The oddized pallet code of the second graphic plane is 5 and it is aqua. Red, which is the color of the evenized pallet code of the first graphic plane, and aqua, which is the color of the oddized pallet code of the second graphic plane, are blended and become gray.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤、カラーコードは奇数です。2 番目のグラフィックプレーンのパレットコードは 4、色は赤紫です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは奇数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。2 番目のグラフィックプレーンの奇数化したパレットコードは 5、色は水色です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の水色が混ざって灰色になります。</span></p><h5><span class="en">D4 灰 (gray)</span> <span class="ja">D4 灰 (灰色)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The pallet code of the second graphic plane is 5 and it is aqua. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The first graphic plane and the second graphic plane are blended because the color code of the evenized pallet code of the first graphic plane is an odd number. The oddized pallet code of the second graphic plane is 5 and it is aqua. Red, which is the color of the evenized pallet code of the first graphic plane, and aqua, which is the color of the oddized pallet code of the second graphic plane, are blended and become gray.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 2、色は赤、カラーコードは奇数です。2 番目のグラフィックプレーンのパレットコードは 5、色は水色です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは奇数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。2 番目のグラフィックプレーンの奇数化したパレットコードは 5、色は水色です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の水色が混ざって灰色になります。</span></p><h5><span class="en">D5 紫 (fuchsia)</span> <span class="ja">D5 紫 (赤紫)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 2 and it is red. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The first graphic plane and the second graphic plane are blended because the color code of the evenized pallet code of the first graphic plane is an odd number. The oddized pallet code of the second graphic plane is 3 and it is blue. Red, which is the color of the evenized pallet code of the first graphic plane, and blue, which is the color of the oddized pallet code of the second graphic plane, are blended and become fuchsia.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 2、色は赤です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは奇数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。2 番目のグラフィックプレーンの奇数化したパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の青が混ざって赤紫になります。</span></p><h5><span class="en">D6 紫 (fuchsia)</span> <span class="ja">D6 紫 (赤紫)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 3 and it is blue. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The first graphic plane and the second graphic plane are blended because the color code of the evenized pallet code of the first graphic plane is an odd number. The oddized pallet code of the second graphic plane is 3 and it is blue. Red, which is the color of the evenized pallet code of the first graphic plane, and blue, which is the color of the oddized pallet code of the second graphic plane, are blended and become fuchsia.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは奇数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。2 番目のグラフィックプレーンの奇数化したパレットコードは 3、色は青です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の青が混ざって赤紫になります。</span></p><h5><span class="en">D7 灰 (gray)</span> <span class="ja">D7 灰 (灰色)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 4 and it is fuchsia. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The first graphic plane and the second graphic plane are blended because the color code of the evenized pallet code of the first graphic plane is an odd number. The oddized pallet code of the second graphic plane is 5 and it is aqua. Red, which is the color of the evenized pallet code of the first graphic plane, and aqua, which is the color of the oddized pallet code of the second graphic plane, are blended and become gray.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 4、色は赤紫です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは奇数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。2 番目のグラフィックプレーンの奇数化したパレットコードは 5、色は水色です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の水色が混ざって灰色になります。</span></p><h5><span class="en">D8 灰 (gray)</span> <span class="ja">D8 灰 (灰色)</span></h5><p><span class="en">Two graphic planes are displayed. The pallet code of the first graphic plane is 3 and it is blue. The pallet code of the second graphic plane is 5 and it is aqua. The evenized pallet code of the first graphic plane is 2, it is red and its color code is an odd number. The first graphic plane and the second graphic plane are blended because the color code of the evenized pallet code of the first graphic plane is an odd number. The oddized pallet code of the second graphic plane is 5 and it is aqua. Red, which is the color of the evenized pallet code of the first graphic plane, and aqua, which is the color of the oddized pallet code of the second graphic plane, are blended and become gray.</span> <span class="ja">2 枚のグラフィックプレーンが表示されます。1 番目のグラフィックプレーンのパレットコードは 3、色は青です。2 番目のグラフィックプレーンのパレットコードは 5、色は水色です。1 番目のグラフィックプレーンの偶数化したパレットコードは 2、色は赤、カラーコードは奇数です。1 番目のグラフィックプレーンの偶数化したパレットコードのカラーコードが奇数なので 1 番目のグラフィックプレーンと 2 番目のグラフィックプレーンが混ざります。2 番目のグラフィックプレーンの奇数化したパレットコードは 5、色は水色です。1 番目のグラフィックプレーンの偶数化したパレットコードの色の赤と 2 番目のグラフィックプレーンの奇数化したパレットコードの色の水色が混ざって灰色になります。</span></p><h3><a href="#zkeytests" id="zkeytests">3.43. zkeytest.s </a></h3><p><span class="en"> zkeytest.s is the source code of <a href="#zkeytestx">zkeytest.x</a>. </span><span class="ja"> zkeytest.s は<a href="#zkeytestx">zkeytest.x</a>のソースコードです。 </span></p><h3><a href="#zkeytestx" id="zkeytestx">3.44. zkeytest.x </a></h3><p><span class="en"> zkeytest.x tests the Z keyboard LED control. </span><span class="ja"> zkeytest.x は Z キーボード LED 制御をテストします。 </span></p><h2><a href="#otherprograms" id="otherprograms">4. <span class="en"> Other programs </span><span class="ja"> その他のプログラム </span></a></h2><h3><a href="#_060tsys" id="_060tsys">4.1. 060tsys/* </a></h3><p><span class="en"> The latest version of 060turbo.sys. </span><span class="ja"> 060turbo.sys の最新版です。 </span></p><h3><a href="#_38400bpss" id="_38400bpss">4.2. 38400bps.s </a></h3><p><span class="en">The source code of <a href="#_38400bpsx">38400bps.x</a>.</span> <span class="ja"><a href="#_38400bpsx">38400bps.x</a>のソースコードです。</span></p><h3><a href="#_38400bpsx" id="_38400bpsx">4.3. 38400bps.x </a></h3><p><span class="en">Run with RSDRV.SYS 2.02 installed. The built-in RS-232C port of X680x0 will be set as follows.</span> <span class="ja">RSDRV.SYS 2.02 が組み込まれている状態で実行してください。X680x0 の内蔵 RS-232C ポートが以下の設定になります。</span></p><table><tbody><tr><th><span class="en">Baud rate</span><span class="ja">ボーレート</span></th><td>38400bps (<span class="en">Theoretical value is</span><span class="ja">理論値は</span> 39062.5bps)</td></tr><tr><th><span class="en">Data length</span><span class="ja">データ長</span></th><td><span class="en">8 bits</span><span class="ja">8 ビット</span></td></tr><tr><th><span class="en">Parity</span><span class="ja">パリティ</span></th><td><span class="en">None</span><span class="ja">なし</span></td></tr><tr><th><span class="en">Stop</span><span class="ja">ストップ</span></th><td><span class="en">1 bits</span><span class="ja">1 ビット</span></td></tr><tr><th><span class="en">Flow control</span><span class="ja">フロー制御</span></th><td>RTS</td></tr></tbody></table><h3><a href="#_51200bpss" id="_51200bpss">4.4. 51200bps.s </a></h3><p><span class="en">The source code of <a href="#_51200bpsx">51200bps.x</a>.</span> <span class="ja"><a href="#_51200bpsx">51200bps.x</a>のソースコードです。</span></p><h3><a href="#_51200bpsx" id="_51200bpsx">4.5. 51200bps.x </a></h3><p><span class="en">Run with RSDRV.SYS 2.02 installed. The built-in RS-232C port of X680x0 will be set as follows.</span> <span class="ja">RSDRV.SYS 2.02 が組み込まれている状態で実行してください。X680x0 の内蔵 RS-232C ポートが以下の設定になります。</span></p><table><tbody><tr><th><span class="en">Baud rate</span><span class="ja">ボーレート</span></th><td>51200bps (<span class="en">Theoretical value is</span><span class="ja">理論値は</span> 52083.3bps)</td></tr><tr><th><span class="en">Data length</span><span class="ja">データ長</span></th><td><span class="en">8 bits</span><span class="ja">8 ビット</span></td></tr><tr><th><span class="en">Parity</span><span class="ja">パリティ</span></th><td><span class="en">None</span><span class="ja">なし</span></td></tr><tr><th><span class="en">Stop</span><span class="ja">ストップ</span></th><td><span class="en">1 bits</span><span class="ja">1 ビット</span></td></tr><tr><th><span class="en">Flow control</span><span class="ja">フロー制御</span></th><td>RTS</td></tr></tbody></table><p><span class="en">When the target USB-RS232C converter supports 50000bps, it may be possible to connect with an error margin of 4%.</span> <span class="ja">相手の USB-RS232C 変換器が 50000bps に対応しているとき、誤差 4% で接続できることがあります。</span></p><h3><a href="#crtmod16s" id="crtmod16s">4.6. crtmod16.s</a></h3><p><span class="en">The source code of <a href="#crtmod16x">crtmod16.x</a> and <a href="#crtmrb16x">crtmrb16.x</a>.</span> <span class="ja"><a href="#crtmod16x">crtmod16.x</a> と <a href="#crtmrb16x">crtmrb16.x</a> のソースコードです。</span></p><h3><a href="#crtmod16x" id="crtmod16x">4.7. crtmod16.x</a></h3><p><span class="en">This is a resident program of IOCS _CRTMOD and IOCS _G_CLR_ON included in IPLROM 1.6.</span> <span class="ja">IPLROM 1.6 に含まれる IOCS _CRTMOD と IOCS _G_CLR_ON を常駐プログラムにしたものです。</span></p><pre>B:\&gt;<kbd>crtmod16</kbd>
crtmod16.x (2024-08-25)
オプション
  -e       CRTMODを拡張する
  -l 0-1   0=CRT,1=LCD
  -m 0-47  画面モード
  -r       CRTMODの拡張を解除する
B:\&gt;<kbd>crtmod16 -e -m16</kbd>
crtmod16.x (2024-08-25)
CRTMODを拡張しました
B:\&gt;<kbd>db</kbd>
X68k Debugger version 3.00 Copyright 1987-1993 SHARP/Hudson
Micro Processor Unit:16bit MC68000
Floating Point Co Processor:Softwere emulation.
-<kbd>d e82000</kbd>
00E82000  0000 5294 0020 003E 0400 07C0 0420 07FE           ..R[94]. .&gt;...ﾀ. ..
00E82010  8000 F800 8020 F83E 8400 FFC0 AD6A FFFE           [80]...[80] .&gt;[84]..ﾀｭj..
00E82020  0000 0000 0000 0000 0000 0000 0000 0000           ................
00E82030  0000 0000 0000 0000 0000 0000 0000 0000           ................
00E82040  0000 0000 0000 0000 0000 0000 0000 0000           ................
00E82050  0000 0000 0000 0000 0000 0000 0000 0000           ................
00E82060  0000 0000 0000 0000 0000 0000 0000 0000           ................
00E82070  0000 0000 0000 0000 0000 0000 0000 0000           ................
-<kbd>q</kbd>
B:\&gt;<kbd>crtmod16 -r</kbd>
CRTMODの拡張を解除しました
B:\&gt;</pre><h3><a href="#crtmrb16x" id="crtmrb16x">4.8. crtmrb16.x</a></h3><p><span class="en"> crtmrb16.x is a modification of crtmod16.x to reproduce the IPLROM 1.0 to 1.3 bug. </span><span class="ja"> crtmrb16.x は crtmod16.x に IPLROM 1.0～1.3 のバグを再現させる改造を施したものです。 </span></p><p><span class="en"> IPLROM 1.0 to 1.3 has a bug in which IOCS _CRTMOD initializes the graphics palette with a different number of colors than the specified screen mode. Specifically, IOCS _CRTMOD ignores the number of colors specified by the screen mode specified in the _CRTMOD argument and initializes the graphics palette as 16 colors for 256x256, 256 colors for 512x512, and 65536 colors for 768x512, which is a nonsense behavior. If you call _G_CLR_ON after _CRTMOD according to the manner in which the graphics screen is displayed, there is no problem because _G_CLR_ON will re-initialize the graphics palette with the correct number of colors. If you display the graphics screen without calling _G_CLR_ON after _CRTMOD, the bug in _CRTMOD will be exposed. </span><span class="ja"> IPLROM 1.0～1.3 には、IOCS _CRTMOD がグラフィックパレットを指定された画面モードと異なる色数で初期化するというバグがあります。 具体的には、_CRTMOD の引数で指定された画面モードで定められた色数を無視して、256x256 は 16 色、512x512 は 256 色、768x512 は 65536 色とみなしてグラフィックパレットを初期化するという、ナンセンスな動きをします。 グラフィック画面を表示するときの作法に従って _CRTMOD の後に _G_CLR_ON を呼び出せば、_G_CLR_ON が正しい色数でグラフィックパレットを初期化し直すので問題ありません。_CRTMOD の後に _G_CLR_ON を呼び出さずにグラフィック画面を表示すると、_CRTMOD のバグが露見します。 </span></p><p><span class="en"> Trouble is, it seems that some software is painting over the bug by initializing the graphics palette in a way that depends on this bug. Such software appears to work correctly with IPLROM 1.0 to 1.3, but when run under IPLROM 1.6/crtmod16.x, where the bug has been fixed, the bug is exposed and the display is corrupted. If you have software whose graphics palette is not correct only with IPLROM 1.6, you may be able to get the expected display by running it after &#34;crtmrb16.x -e -m16&#34;. </span><span class="ja"> 困ったことに、一部のソフトウェアがこのバグに依存した方法でグラフィックパレットを初期化するというバグの上塗りをしているようです。そのようなソフトウェアは IPLROM 1.0～1.3 では正しく動作しているように見えますが、バグが修正された IPLROM 1.6/crtmod16.x の環境で動かすとバグの上塗りが露見して表示が乱れます。IPLROM 1.6 のときだけグラフィックパレットがおかしくなるソフトウェアがあるとき、「crtmrb16.x -e -m16」としてから動かすと期待通りの表示になるかも知れません。 </span></p><p><span class="en"> When a bug is fixed and another bug is found that hides it, the correct course of action is not to restore the fixed bug, but to fix the newly found bug. Do not use crtmrb16.x on a regular basis, as it is intended to temporarily restore a bug that has been fixed when it is not possible to fix the newly found bug. </span><span class="ja"> あるバグを修正したらそれを隠していた別のバグが見つかったときの正しい対処方法は、修正したバグを復元することではなく、新たに見つかったバグを修正することです。crtmrb16.x は、新たに見つかったバグを修正できない場合に、一時的に、修正したバグを復元するためのものなので、常用しないでください。 </span></p><pre>B:\&gt;<kbd>crtmrb16</kbd>
crtmrb16.x (2024-08-25)
オプション
  -e       CRTMODを拡張する
  -l 0-1   0=CRT,1=LCD
  -m 0-47  画面モード
  -r       CRTMODの拡張を解除する
B:\&gt;<kbd>crtmrb16 -e -m16</kbd>
crtmrb16.x (2024-08-25)
CRTMODを拡張しました
B:\&gt;<kbd>db</kbd>
X68k Debugger version 3.00 Copyright 1987-1993 SHARP/Hudson
Micro Processor Unit:16bit MC68000
Floating Point Co Processor:Softwere emulation.
-<kbd>d e82000</kbd>
00E82000  0001 0001 0203 0203 0405 0405 0607 0607           ................
00E82010  0809 0809 0A0B 0A0B 0C0D 0C0D 0E0F 0E0F           ................
00E82020  1011 1011 1213 1213 1415 1415 1617 1617           ................
00E82030  1819 1819 1A1B 1A1B 1C1D 1C1D 1E1F 1E1F           ................
00E82040  2021 2021 2223 2223 2425 2425 2627 2627            ! !&#34;#&#34;#$%$%&amp;&#39;&amp;&#39;
00E82050  2829 2829 2A2B 2A2B 2C2D 2C2D 2E2F 2E2F           ()()*+*+,-,-././
00E82060  3031 3031 3233 3233 3435 3435 3637 3637           0101232345456767
00E82070  3839 3839 3A3B 3A3B 3C3D 3C3D 3E3F 3E3F           8989:;:;&lt;=&lt;=&gt;?&gt;?
-<kbd>q</kbd>
B:\&gt;<kbd>crtmrb16 -r</kbd>
CRTMODの拡張を解除しました
B:\&gt;</pre><h3><a href="#db350bfd" id="db350bfd">4.9. db350.bfd</a></h3><p><span class="en">db350.bfd is a binary diff file to make db350.x from DB.X. Run bup db350.bfd in the directory where you put DB.X 3.00 to make db350.x.</span> <span class="ja">db350.bfd は DB.X 3.00 から db350.x を作るバイナリ差分ファイルです。DB.X 3.00 を置いたディレクトリで bup db350.bfd を実行すると db350.x ができます。</span></p><p><span class="en">bup.x can be found <a href="http://retropc.net/x68000/software/tools/archiver/bdifset/" target="_blank">here</a>.</span> <span class="ja">bup.x は<a href="http://retropc.net/x68000/software/tools/archiver/bdifset/" target="_blank">こちら</a>にあります。</span></p><p><span class="en">db350.x is a byproduct of ROM Debugger 3.60, a sort of child between DB.X 3.00 and ROM Debugger 3.60.</span> <span class="ja">db350.x は ROM デバッガ 3.60 の副産物で、DB.X 3.00 と ROM デバッガ 3.60 の間の子のようなものです。</span></p><p><span class="en">ROM debugger 2.32 and DB.X 3.00/3.02 defects listed <a href="https://stdkmd.net/bugsx68k/#db">here</a> have been largely fixed in db350.x and ROM Debugger 3.60.</span> <span class="ja"><a href="https://stdkmd.net/bugsx68k/#db">こちら</a>に記載されている ROM デバッガ 2.32 と DB.X 3.00/3.02 の不具合は db350.x と ROM デバッガ 3.60 では概ね修正されています。</span></p><h3><a href="#ishfss" id="ishfss">4.10. isHFS.s</a></h3><p><span class="en"> The source code of <a href="#ishfsx">isHFS.x</a>. </span><span class="ja"> <a href="#ishfsx">isHFS.x</a>のソースコードです。 </span></p><h3><a href="#ishfsx" id="ishfsx">4.11. isHFS.x</a></h3><p><span class="en"> Checks if the current drive or the specified drive is HFS. </span><span class="ja"> カレントドライブまたは指定されたドライブが HFS か調べます。 </span></p><pre>B:\&gt;<kbd>isHFS.x</kbd>
ドライブB:はHFSです
B:\&gt;<kbd>isHFS.x d:</kbd>
ドライブD:はHFSではありません
B:\&gt;<kbd>isHFS.x -h</kbd>
isHFS.x
  ドライブがHFSか調べます
  使用法: isHFS [ドライブ名]
  終了コード: 0=HFSではない 1=HFS</pre><h3><a href="#isxeijs" id="isxeijs">4.12. isXEiJ.s</a></h3><p><span class="en"> The source code of <a href="#isxeijx">isXEiJ.x</a>. </span><span class="ja"> <a href="#isxeijx">isXEiJ.x</a>のソースコードです。 </span></p><h3><a href="#isxeijx" id="isxeijx">4.13. isXEiJ.x</a></h3><p><span class="en"> Check if it is running on XEiJ. </span><span class="ja"> XEiJ 上で動作しているか調べます。 </span></p><pre>B:\&gt;<kbd>isXEiJ.x</kbd>
XEiJです
B:\&gt;<kbd>isXEiJ -h</kbd>
isXEiJ.x
  XEiJか調べます
  使用法: isXEiJ
  終了コード: 0=XEiJではない 1=XEiJ</pre><h3><a href="#ppcons" id="ppcons">4.14. ppcon.s</a></h3><p><span class="en">The source code of <a href="#ppconx">ppcon.x</a>.</span> <span class="ja"><a href="#ppconx">ppcon.x</a> のソースコードです。</span></p><h3><a href="#ppconx" id="ppconx">4.15. ppcon.x</a></h3><p><span class="en">A character display routine that supports proportional-pitch and right-justification used in the IPLROM 1.6 startup screen can be incorporated as a device driver or resident program.</span> <span class="ja">IPLROM 1.6 の起動画面で使われているプロポーショナルピッチや右寄せに対応した文字表示ルーチンをデバイスドライバまたは常駐プログラムとして組み込めるようにしたものです。</span></p><pre>B:\&gt;<kbd>ppcon.x</kbd>
Proportional-Pitch CONsole version 0.11

オプション
  -f        固定ピッチに切り替える
  -k        常駐する
  -p        プロポーショナルピッチに切り替える
  -q        表示を減らす
  -r        解除する
  -s        サンプルを表示する
  -v        表示を増やす

制御文字
  ^G        $07 BL ベルを鳴らす
  ^H        $08 BS カーソルを1桁左へ。左端では1行上の右端へ。上端では何もしない
  ^I        $09 HT カーソルを次のタブ桁へ。なければ1行下の左端へ。下端ではスクロールアップして左端へ
  ^J        $0A LF カーソルを1行下へ。下端ではスクロールアップ
  ^K        $0B VT カーソルを1行上へ。上端では何もしない
  ^L        $0C FF カーソルを1桁右へ。右端では1行下の左端へ。下端ではスクロールアップして左端へ
  ^M        $0D CR カーソルを左端へ
  ^Z        $1A SB 左上から右下まで消去。カーソルを左上へ
  ^[        $1B EC エスケープシーケンス開始
  ^^        $1E RS カーソルを左上へ

エスケープシーケンス
  ^[*       左上から右下まで消去。カーソルを左上へ
  ^[=rc     カーソルをr-$20行,c-$20桁へ。rとcは文字
  ^[D       カーソルを1行下へ。下端ではスクロールアップ
  ^[E       カーソルを1行下の左端へ。下端ではスクロールアップ
  ^[M       カーソルを1行上へ。上端ではスクロールダウン
  ^[[&gt;5l    カーソルON
  ^[[&gt;5h    カーソルOFF
  ^[[?4l    ジャンプスクロール
  ^[[?4h    8ドットスムーススクロール
  ^[[n@     カーソルから右にn桁挿入
  ^[[nA     カーソルをn行上へ。上端を超えるときは動かない
  ^[[nB     カーソルをn行下へ。下端で止まる
  ^[[nC     カーソルをn桁右へ。右端で止まる
  ^[[nD     カーソルをn桁左へ。左端で止まる
  ^[[r;cH   カーソルをr-1行,c-1桁へ。下端で止まる。右端で止まる
  ^[[r;cf   カーソルをr-1行,c-1桁へ。下端で止まる。右端で止まる
  ^[[0J     カーソルから右下まで消去する
  ^[[1J     左上からカーソルまで消去する
  ^[[2J     左上から右下まで消去する。カーソルを左上へ
  ^[[0K     カーソルから右端まで消去する
  ^[[1K     左端からカーソルまで消去する
  ^[[2K     左端から右端まで消去する
  ^[[nL     カーソルから下にn行挿入。カーソルを左端へ
  ^[[nM     カーソルから下をn行削除。カーソルを左端へ
  ^[[nP     カーソルから右をn桁削除
  ^[[nX     カーソルから右をn桁消去
  ^[[nc     中央寄せ
  ^[[nl     左寄せ
  ^[[0m     リセット
  ^[[1m     太字
  ^[[2m     細字
  ^[[3m     斜体
  ^[[4m     下線
  ^[[7m     反転
  ^[[9m     取り消し線
  ^[[21m    波線
  ^[[22m    太字、細字解除
  ^[[23m    斜体解除
  ^[[24m    下線、波線解除
  ^[[26m    プロポーショナル
  ^[[27m    反転解除
  ^[[29m    取り消し線解除
  ^[[30m    黒
  ^[[31m    水色
  ^[[32m    黄色
  ^[[33m    白
  ^[[34m    太字、黒
  ^[[35m    太字、水色
  ^[[36m    太字、黄色
  ^[[37m    太字、白
  ^[[40m    反転、黒
  ^[[41m    反転、水色
  ^[[42m    反転、黄色
  ^[[43m    反転、白
  ^[[44m    反転、太字、黒
  ^[[45m    反転、太字、水色
  ^[[46m    反転、太字、黄色
  ^[[47m    反転、太字、白
  ^[[50m    プロポーショナル解除
  ^[[51m    四角囲み
  ^[[52m    丸囲み
  ^[[53m    上線
  ^[[54m    四角囲み、丸囲み解除
  ^[[55m    上線解除
  ^[[73m    上付き
  ^[[74m    下付き
  ^[[75m    上付き、下付き解除
  ^[[6n     カーソル位置報告。^[[r;cRを入力
  ^[[nr     右寄せ
  ^[[s      カーソルの座標と文字属性を保存する
  ^[[u      カーソルの座標と文字属性を復元する
B:\&gt;</pre><h3><a href="#set232cs" id="set232cs">4.16. set232c.s</a></h3><p><span class="en"> The source code of <a href="#set232cx">set232c.x</a>. </span><span class="ja"> <a href="#set232cx">set232c.x</a> のソースコードです。 </span></p><h3><a href="#set232cx" id="set232cx">4.17. set232c.x</a></h3><p><span class="en"> Change the current or startup RS-232C settings. </span><span class="ja"> 現在または起動時の RS-232C の設定を変更します。 </span></p><pre>B:\&gt;<kbd>set232c.x -h</kbd>
set232c.x (2024-05-04)
Change current or startup RS-232C settings
    -5      Display baud rate at 5 MHz (default)
    -7      Display baud rate at 7.3728 MHz
    -c      Change current RS-232C settings as in SPEED.X (default)
    -i      Use initial setting value $4E07 9600 b8 pn s1 xon
    -q      Do not display settings
    -s      Change startup RS-232C settings as in SWITCH.X
    $xxxx   Specify setting value by 4-digit hexadecimal number
  Baud rate at 5 MHz
    75
    150
    300
    600
    1200
    2400
    4800
    9600
    19200
    38400
    76800
  Baud rate at 7.3728 MHz
    112.5
    225
    450
    900
    1800
    3600
    7200
    14400
    28800
    57600
    115200
  Data
    b5      5-bit
    b6      6-bit
    b7      7-bit
    b7s     7-bit with SI/SO
    b8      8-bit
  Parity
    pn      Non-parity
    po      Odd parity
    pe      Even parity
  Stop bit
    s1      Stop 1-bit
    s1.5    Stop 1.5-bit
    s2      Stop 2-bit
  Flow control
    none    No flow control
    xon     XON/XOFF flow control
    rts     RTS/CTS flow control
B:\&gt;<kbd>set232c.x 38400</kbd>
Current RS-232C settings at 5 MHz are: $4C89 38400 b8 pn s1 rts
B:\&gt;</pre><h3><a href="#stupsnds" id="stupsnds">4.18. stupsnd.s</a></h3><p><span class="en"> The source code of <a href="#stupsndx">stupsnd.x</a>. </span><span class="ja"> <a href="#stupsndx">stupsnd.x</a>のソースコードです。 </span></p><h3><a href="#stupsndx" id="stupsndx">4.19. stupsnd.x</a></h3><p><span class="en"> Turn on/off startup sound switch of X68030 or higher and IPLROM 1.6. </span><span class="ja"> X68030 以上と IPLROM 1.6 の起動音のスイッチを on/off します。 </span></p><pre>B:\&gt;<kbd>stupsnd.x -?</kbd>
stupsnd.x (2024-03-04)
  turn on/off startup sound switch of X68030 or higher and IPLROM 1.6
options
  off
    turn off startup sound switch
  on
    turn on startup sound switch with key code 76 (o5c)
  2..127
  $02..$7F
  o5c etc.
    turn on startup sound switch with specified key code
  play
    play startup sound right now
    FM sound driver must be removed
tone parameters
  kc,kf,tm,va[0],...,va[54]
    specify tone parameters
    kc -- key code
    kf -- key fraction
    tm -- time from key-on to key-off (unit is 1/10,000 of a second)
    va -- tone parameters common to OPMDRV.X
  save
    save register data to stupsnd.dat
    to reflect in the startup sound, inserting data into IPLROM 1.6 is required
B:\&gt;</pre><h3><a href="#vperiods" id="vperiods">4.20. vperiod.s</a></h3><p><span class="en"> The source code of <a href="#vperiodx">vperiod.x</a>. </span><span class="ja"> <a href="#vperiodx">vperiod.x</a>のソースコードです。 </span></p><h3><a href="#vperiodx" id="vperiodx">4.21. vperiod.x</a></h3><p><span class="en"> Measure the vertical period (vertical synchronous signal period). </span><span class="ja"> 垂直周期 (垂直同期信号の周期) を計測します。 </span></p><pre>B:\&gt;<kbd>vperiod.x</kbd>
vperiod.x (2024-02-17)
obs_VP=18031
B:\&gt;</pre></div><div id="foot"><a href="https://stdkmd.net/">STUDIO KAMADA</a><br>Copyright &copy; 1999-2025 Makoto Kamada<div></div></div></body></html>